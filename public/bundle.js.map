{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/stopWatch/utils.js","../src/stopWatch/StopWatchSVG.svelte","../node_modules/svelte/store/index.mjs","../src/stopWatch/stores.js","../src/stopWatch/StopWatch.svelte","../src/pathCalculate/ResultGrid.svelte","../src/pathCalculate/store.js","../src/helpers/randomNumber.js","../src/pathCalculate/algorithm.js","../src/pathCalculate/mutations.js","../src/pathCalculate/PathCalculate.svelte","../src/pathCalculate/helper.js","../src/SchemeRender.svelte","../src/GraphSwitcher/GraphSwitcher.svelte","../src/GraphSwitcher/UserMetroGraph.svelte","../node_modules/graph-data-structure/index.js","../src/graphSwitcher/graphBuilder.js","../src/graphSwitcher/getData.js","../src/App.svelte","../src/helpers/arrayExtends.js","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","function zeroPadded(number) {\n    return number >= 10 ? number.toString() : `0${number}`;\n}\n\nfunction last2Digits(number) {\n    return number.toString().slice(-2);\n}\n\nexport function formatTime(milliseconds) {\n    const mm = zeroPadded(Math.floor(milliseconds / 1000 / 60));\n    const ss = zeroPadded(Math.floor(milliseconds / 1000) % 60);\n    const t = last2Digits(Math.floor(milliseconds / 10));\n    return `${mm}:${ss}.${t}`;\n}","<script>\n  import { formatTime } from \"./utils.js\";\n\n  export let lapse = 0;\n\n  $: rotation = ((lapse / 1000 / 60) * 360) % 360;\n  let seconds;\n  let minutes;\n  let transitioned;\n\n  $: if (!lapse && minutes && seconds) {\n    minutes.style.transition = \"transform 0.2s ease-in-out\";\n    seconds.style.transition = \"transform 0.2s ease-in-out\";\n    transitioned = false;\n  }\n  $: if (lapse && !transitioned) {\n    minutes.style.transition = \"none\";\n    seconds.style.transition = \"none\";\n    transitioned = true;\n  }\n</script>\n\n<style>\n  svg {\n    font-family: monospace;\n    color: hsl(0, 0%, 5%);\n  }\n</style>\n\n<svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\n  <g transform=\"translate(50 50)\">\n    <circle\n      cx=\"0\"\n      cy=\"0\"\n      r=\"42\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"6\"\n      stroke-dasharray=\"0.3 1.898\"\n      transform=\"scale(-1 1)\"/>\n\n    <g bind:this={minutes} transform=\"rotate({rotation})\">\n      <g transform=\"translate(0 -50)\">\n        <path\n          d=\"M -2.25 0 h 4.5 l -2.25 2.5 l -2.25 -2.5\"\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          stroke-width=\"1\"\n          stroke-linejoin=\"round\"\n          stroke-linecap=\"round\" />\n      </g>\n    </g>\n\n    <g\n      transform=\"translate(0 20)\"\n      stroke=\"currentColor\"\n      stroke-width=\"0.4\"\n      fill=\"none\">\n      <g bind:this={seconds} transform=\"rotate({(rotation * 60) % 360})\">\n        <path\n          d=\"M 0 -1 v -7.5\"\n          stroke-linejoin=\"round\"\n          stroke-linecap=\"round\" />\n      </g>\n      <circle r=\"9\" />\n      <circle r=\"1\" />\n    </g>\n\n    <text\n      text-anchor=\"middle\"\n      fill=\"currentColor\"\n      dominant-baseline=\"middle\"\n      font-size=\"14\"\n      style=\"font-weight: 300; letter-spacing: 1px;\">\n      {formatTime(lapse)}\n    </text>\n  </g>\n</svg>\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from \"svelte/store\";\n\nexport const time = readable(0, function start(set) {\n  const beginning = new Date();\n  const beginningTime = beginning.getTime();\n\n  const interval = setInterval(() => {\n    const currentTime = new Date().getTime();\n    set(currentTime - beginningTime);\n  }, 10);\n\n  return function stop() {\n    set(0);\n    clearInterval(interval);\n  };\n});\n","<script>\n  import { onDestroy } from \"svelte\";\n  import StopWatchSVG from \"./StopWatchSVG.svelte\";\n  import { time } from \"./stores.js\";\n\n  export let running = false;\n\n  let lapse = 0;\n  let unsubscribe;\n\n  $: if (running) {\n    stop();\n    start();\n  } else {\n    terminate();\n  }\n\n  function start() {\n    unsubscribe = time.subscribe(value => {\n      lapse = value;\n    });\n  }\n\n  function terminate() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = null;\n    }\n  }\n\n  function stop() {\n    lapse = 0;\n    terminate();\n  }\n\n  onDestroy(() => {\n    terminate();\n  });\n</script>\n\n<div class=\"stopwatch\">\n  <StopWatchSVG {lapse}/>\n</div>\n","<script>\n  import StopWatch from \"../stopWatch/StopWatch.svelte\";\n\n  export let running;\n  export let graph;\n  export let currentGeneration;\n  export let mutationsCount;\n  export let crossoversCount;\n  export let bestValue;\n  export let currentBest;\n  export let population;\n  export let best;\n  export let bestValuesArray;\n\n  $: bestPopulation =\n    population[currentBest.bestPosition] ?\n    population[currentBest.bestPosition].toString() : '';\n\n  $: bestValuesString = bestValuesArray.join(\" > \").toString();\n</script>\n\n<style lang=\"scss\">\n  .info {\n    font-family: \"Courier New\", Courier, monospace;\n    display: flex;\n  }\n  .table {\n    max-width: 300px;\n    flex: 1;\n    padding: 10px;\n  }\n  .stop-watch {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 16px;\n  }\n  .paths {\n    padding: 10px 30px;\n    flex: 2;\n  }\n  .paths-row {\n      margin-bottom: 10px;\n    }\n  .row {\n    display: flex;\n    margin-bottom: 10px;\n  }\n  .row-result {\n    flex-direction: column;\n\n    .label {\n      margin-top: 10px;\n    }\n    .value {\n      font-size: 30px;\n      margin-left: 0;\n    }\n  }\n  .value {\n    margin-left: auto;\n  }\n\n  p { \n      font-size: 11px;\n      line-height: 1.2;\n  }\n</style>\n\n<div class=\"info\">\n  <div class=\"table\">\n    <div class=\"stop-watch\">\n      <StopWatch {running} />\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Stations:</div>\n      <div class=\"value\">{graph.nodes().length}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Generation:</div>\n      <div class=\"value\">{currentGeneration}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Mutations:</div>\n      <div class=\"value\">{mutationsCount}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Crossovers:</div>\n      <div class=\"value\">{crossoversCount}</div>\n    </div>\n    <div class=\"row row-result\">\n      <div class=\"label\">Best value:</div>\n      <div class=\"value\">{ bestValue}</div>\n    </div>\n  </div>\n\n  <div class=\"paths\">\n    <div class=\"paths-row\">\n      <div class=\"label-row\">Сhange of the best result</div>\n      <div class=\"value-row\">\n        <p>{bestValuesString}</p>\n      </div>\n    </div>\n  \n    <div class=\"paths-row\">\n      <div class=\"label-row\">Best path</div>\n      <div class=\"value-row\">\n        <p>{best.toString()}</p>\n      </div>\n    </div>\n\n    <div class=\"paths-row\">\n      <div class=\"label-row\">Best path in current population</div>\n      <div class=\"value-row\">\n        <p>{bestPopulation}</p>\n      </div>\n    </div>\n\n    <div class=\"paths-row\">\n      <div class=\"label-row\">Best value in population</div>\n      <div class=\"value-row\">\n        <p>{currentBest.bestValue}</p>\n      </div>\n    </div>\n\n    <div class=\"paths-row\">\n      <div class=\"label-row\">Population</div>\n      <div class=\"value-row\">\n        {#each population as item}\n          <p>{item.toString()}</p>\n        {/each}\n      </div>\n    </div>\n  </div>\n</div>\n","import { writable } from 'svelte/store';\n\nexport const mutationCount = writable(0);\nexport const crossoverCount = writable(0);","export function randomNumber(boundary) {\n  return parseInt(Math.random() * boundary);\n}","import { randomNumber } from \"../helpers/randomNumber\";\nimport { pushMutateMath, doMutateMath, reverseMutateMath } from \"./mutations\";\nimport { mutationCount, crossoverCount } from \"./store.js\";\n\n// Functions with side effects\nfunction mutationIteration(array) {\n  mutationCount.update(n => n + 1);\n  return array;\n}\nconst reverseMutate = seq => mutationIteration(reverseMutateMath(seq));\nconst doMutate = seq => mutationIteration(doMutateMath(seq));\nconst pushMutate = seq => mutationIteration(pushMutateMath(seq));\n\n// Main components\nexport function selection(population, currentBest, best, values, populationSize) {\n  let newPopulation = population.clone();\n\n  let parents = new Array();\n  let initnum = 5;\n  parents.push(newPopulation[currentBest.bestPosition]);\n  parents.push(doMutate(best.clone()));\n  parents.push(pushMutate(best.clone()));\n  parents.push(reverseMutate(best.clone()));\n  parents.push(best.clone());\n\n  const roulette = createRoulette(values);\n\n  for (let i = initnum; i < populationSize; i++) {\n    parents.push(newPopulation[wheelOut(roulette)]);\n  }\n  newPopulation = parents;\n\n  return newPopulation;\n}\n\nexport function mutation(population, populationSize, mutationProbability) {\n  let newPopulation = population.clone();\n  for (let i = 0; i < populationSize; i++) {\n    if (Math.random() < mutationProbability) {\n      if (Math.random() > 0.5) {\n        newPopulation[i] = doMutate(population[i]);\n      } else {\n        newPopulation[i] = pushMutate(population[i]);\n      }\n      i--;\n    }\n  }\n  return newPopulation;\n}\n\nexport function crossover(population, dis, populationSize, crossoverProbability) {\n  let queue = new Array();\n  for (let i = 0; i < populationSize; i++) {\n    if (Math.random() < crossoverProbability) {\n      queue.push(i);\n    }\n  }\n  queue.shuffle();\n  for (let i = 0, j = queue.length - 1; i < j; i += 2) {\n    population = doCrossover(queue[i], queue[i + 1], population, dis);\n    crossoverCount.update(n => n + 1);\n  }\n\n  return population;\n}\n\n// Helper functions\nfunction createRoulette(values = []) {\n  const fitnessValues = values.map(item => 1.0 / item);\n  const sum = fitnessValues.reduce((tempSum, el) => (tempSum += el));\n\n  let tempSum;\n  return fitnessValues\n    .map(item => item / sum)\n    .map(item => (tempSum = (tempSum || 0) + item));\n}\n\nfunction doCrossover(x, y, population, dis) {\n  let newPopulation = population.clone();\n\n  let child1 = getChild(\"next\", x, y, newPopulation, dis);\n  let child2 = getChild(\"previous\", x, y, newPopulation, dis);\n  newPopulation[x] = child1;\n  newPopulation[y] = child2;\n\n  return newPopulation;\n}\n\nfunction getChild(fun, x, y, population, dis) {\n  let solution = new Array();\n  let px = population[x].clone();\n  let py = population[y].clone();\n  let dx, dy;\n  let c = px[randomNumber(px.length)];\n  solution.push(c);\n  while (px.length > 1) {\n    dx = px[fun](px.indexOf(c));\n    dy = py[fun](py.indexOf(c));\n    px.deleteByValue(c);\n    py.deleteByValue(c);\n    c = dis[c][dx] < dis[c][dy] ? dx : dy;\n    solution.push(c);\n  }\n  return solution;\n}\n\nfunction wheelOut(roulette = []) {\n  const rand = Math.random();\n  roulette.forEach((item, i) => {\n    if (rand <= item) {\n      return i;\n    }\n  });\n  return 0;\n}\n","import { randomNumber } from \"../helpers/randomNumber\";\n\nexport function pushMutateMath(seq) {\n  var m, n;\n  do {\n    m = randomNumber(seq.length >> 1);\n    n = randomNumber(seq.length);\n  } while (m >= n);\n\n  var s1 = seq.slice(0, m);\n  var s2 = seq.slice(m, n);\n  var s3 = seq.slice(n, seq.length);\n  return s2\n    .concat(s1)\n    .concat(s3)\n    .clone();\n}\n\nexport function doMutateMath(seq) {\n  let m, n;\n    do {\n      m = randomNumber(seq.length - 2);\n      n = randomNumber(seq.length);\n    } while (m >= n);\n\n    for (var i = 0, j = (n - m + 1) >> 1; i < j; i++) {\n      seq.swap(m + i, n - i);\n    }\n    return seq;\n}\n\nexport function reverseMutateMath(seq) {\n  const reversed = seq.reverse();\n\n  return reversed;\n}\n\n// No use\n// export function preciseMutate(orseq, dis) {\n//   var seq = orseq.clone();\n//   if (Math.random() > 0.5) {\n//     seq.reverse();\n//   }\n//   var bestv = evaluate(seq, dis);\n//   for (var i = 0; i < seq.length >> 1; i++) {\n//     for (var j = i + 2; j < seq.length - 1; j++) {\n//       var new_seq = swap_seq(seq, i, i + 1, j, j + 1);\n//       var v = evaluate(new_seq, dis);\n//       if (v < bestv) {\n//         bestv = v;\n//         seq = new_seq;\n//       }\n//     }\n//   }\n//   return seq;\n// }\n// export function preciseMutate1(orseq, dis) {\n//   var seq = orseq.clone();\n//   var bestv = evaluate(seq, dis);\n\n//   for (var i = 0; i < seq.length - 1; i++) {\n//     var new_seq = seq.clone();\n//     new_seq.swap(i, i + 1);\n//     var v = evaluate(new_seq, dis);\n//     if (v < bestv) {\n//       bestv = v;\n//       seq = new_seq;\n//     }\n//   }\n//   return seq;\n// }\n// function swap_seq(seq, p0, p1, q0, q1) {\n//   var seq1 = seq.slice(0, p0);\n//   var seq2 = seq.slice(p1 + 1, q1);\n//   seq2.push(seq[p0]);\n//   seq2.push(seq[p1]);\n//   var seq3 = seq.slice(q1, seq.length);\n//   return seq1.concat(seq2).concat(seq3);\n// }","<script>\n  import ResultGrid from \"./ResultGrid.svelte\";\n  import { mutationCount, crossoverCount } from \"./store.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import { randomNumber } from \"../helpers/randomNumber\";\n  import { evaluate, randomIndivial, getCurrentBest } from \"./helper\";\n  import { selection, mutation, crossover } from \"./algorithm\";\n  const dispatch = createEventDispatcher();\n\n  // constants\n  let populationSize = 20;\n  let crossoverProbability = 0.9;\n  let mutationProbability = 0.1;\n  let intervalDuration = 40;\n\n  export let graph;\n  export let stationsBetween;\n  export let dis;\n\n  let running = false;\n  let mainInterval;\n\n  let currentGeneration = 0;\n  let bestValue = 0;\n  let bestValuesArray = [];\n  let best = [];\n  let currentBest = {\n    bestPosition: 0,\n    bestValue: []\n  };\n  let population = [];\n  let values = [];\n  let mutationsCount;\n  let crossoversCount;\n\n  const unsubscribeMutation = mutationCount.subscribe(value => mutationsCount = value );\n  const unsubscribeCrossover = crossoverCount.subscribe(value => crossoversCount = value );\n\n  function onStart() {\n    if (!running) {\n      GAStart();\n      running = true;\n    }\n  }\n\n  function onStop() {\n    if (running) {\n      GAStop();\n      running = false;\n    }\n  }\n\n  function GAStop() {\n    clearInterval(mainInterval);\n    dispatch(\"getResult\", {\n      result: best\n    });\n  }\n\n  function GAStart() {\n    initData();\n    GAInitialize();\n    mainInterval = setInterval(render, intervalDuration);\n  }\n\n  function initData() {\n    currentGeneration = 0;\n    bestValue = undefined;\n    best = [];\n    bestValuesArray = [];\n    currentBest = 0;\n    population = [];\n    values = new Array(populationSize);\n    mutationCount.update(n => 0);\n    crossoverCount.update(n => 0);\n  }\n\n  function render() {\n    GANextGeneration();\n  }\n\n  function GAInitialize() {\n    const stationsCount = graph.nodes().length;\n    population = Array.apply(null, Array(populationSize)).map(item =>\n      randomIndivial(stationsCount)\n    );\n    setBestValue();\n  }\n\n  function GANextGeneration() {\n    currentGeneration++;\n    population = selection(population, currentBest, best, values, populationSize);\n    population = crossover(population, dis, populationSize, crossoverProbability);\n    population = mutation(population, populationSize, mutationProbability);\n    setBestValue();\n  }\n\n  function setBestValue() {\n    values = population.map(item => evaluate(item, dis));\n    currentBest = getCurrentBest(values);\n\n    if (bestValue === undefined || bestValue > currentBest.bestValue) {\n      best = population[currentBest.bestPosition].clone();\n      bestValue = currentBest.bestValue;\n      bestValuesArray = [...bestValuesArray, bestValue];\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"src/styles/base.scss\";\n\n  .calculate-block {\n    margin-bottom: 30px;\n  }\n\n  .result-wrapper {\n    @include section;\n    padding: 10px;\n    margin-bottom: 20px;\n  }\n\n  .constants {\n    display: flex;\n    margin-bottom: 20px;\n  }\n  label {\n    display: flex;\n    flex-direction: column;\n    font-size: 12px;\n    margin-right: 20px;\n\n    span {\n      margin-bottom: 5px;\n    }\n  }\n  .text-input {\n    @include text-input;\n    width: 70px;\n  }\n  .buttons {\n    margin-left: auto;\n  }\n  .startButton {\n    @include button;\n    margin-left: 10px;\n  }\n</style>\n\n<div class=\"calculate-block\">\n\n  <div class=\"result-wrapper\">\n    <div class=\"constants\">\n      <label>\n        <span>Population size:</span>\n        <input\n          class=\"text-input\"\n          bind:value={populationSize}\n          type=\"number\"\n          step=\"1\"\n          min=\"1\"\n          max=\"50\" />\n      </label>\n      <label>\n        <span>Crossover probability:</span>\n        <input\n          class=\"text-input\"\n          bind:value={crossoverProbability}\n          type=\"number\"\n          step=\"0.1\"\n          min=\"0.01\"\n          max=\"1\" />\n      </label>\n      <label>\n        <span>Mutation probability:</span>\n        <input\n          class=\"text-input\"\n          bind:value={mutationProbability}\n          type=\"number\"\n          step=\"0.01\"\n          min=\"0.01\"\n          max=\"1\" />\n      </label>\n      <label>\n        <span>Interval duration:</span>\n        <input\n          class=\"text-input\"\n          bind:value={intervalDuration}\n          type=\"number\"\n          step=\"20\"\n          min=\"10\"\n          max=\"3000\" />\n      </label>\n\n      <div class=\"buttons\">\n        <button class=\"startButton protrude\" on:click={onStart}>Start</button>\n        <button class=\"startButton protrude\" on:click={onStop}>Stop</button>\n      </div>\n    </div>\n\n    <ResultGrid\n      {running}\n      {graph}\n      {currentGeneration}\n      {mutationsCount}\n      {crossoversCount}\n      {bestValue}\n      {currentBest}\n      {population}\n      {best}\n      {bestValuesArray} />\n  </div>\n</div>\n","export function evaluate(indivial, dis) {\n  return indivial.reduce(\n    (sum, element, index, array) => (sum += dis[element][array[index - 1]])\n  );\n}\n\nexport function randomIndivial(length) {\n  return Array.from(Array(length).keys()).shuffle();\n}\n\nexport function getCurrentBest(values) {\n  const min = values.min();\n\n  return {\n    bestValue: min,\n    bestPosition: values.indexOf(min)\n  };\n}","<script>\n  export let stationsBetween, path, stations;\n\n  let isMapActive = true;\n  let resultPath = [];\n  let stationsPath = [];\n  let timerId;\n  let showingStation,\n    showingRow = null;\n\n  const ANIMATION_DURATION = 200;\n\n  // Events\n  function onStationHover(index, rowIndex) {\n    clearListInterval();\n    showStation(index);\n    showingRow = null;\n  }\n  function onPlay() {\n    clearListInterval();\n    initInterval();\n  }\n\n  function initInterval() {\n    let index = 0;\n    timerId = setInterval(() => {\n      if (index < stationsPath.length) {\n        showStation(stationsPath[index].id);\n        showingRow = index;\n        index++;\n      } else {\n        clearListInterval();\n        disableStationHover();\n      }\n    }, ANIMATION_DURATION);\n  }\n  function clearListInterval() {\n    showingRow = null;\n    clearInterval(timerId);\n  }\n  function showStation(index) {\n    isMapActive = false;\n    showingStation = index;\n  }\n  function disableStationHover() {\n    isMapActive = true;\n    showingStation = null;\n  }\n\n  $: stationsPath = calculatePath({ path, stationsBetween });\n\n  function getResultPath({ path = [], stationsBetween }) {\n    let resultPath = new Array(path.length);\n    let resultWeight = [];\n    let counter = 0;\n\n    for (let i = 1; i < path.length; i++) {\n      const firstIndex = path[i - 1];\n      const secondIndex = path[i];\n      const currentGap = stationsBetween[firstIndex][secondIndex];\n      counter += currentGap.length - 1;\n\n      resultPath[i] = {\n        stations: currentGap.slice(1),\n        weight: currentGap.weight,\n        counter\n      };\n\n      \n    }\n\n    resultPath[0] = {\n      stations: [path[0].toString()],\n      weight: 0,\n      counter: 0\n    };\n\n    return resultPath;\n  }\n\n  function calculatePath({ path = [], stationsBetween }) {\n    let newStationsPath = [];\n\n    resultPath = getResultPath({ path, stationsBetween });\n\n    resultPath.map(gap => {\n      gap.stations.map(item => {\n        newStationsPath.push(stations.find(station => station.id == item));\n      });\n    });\n\n    return newStationsPath;\n  }\n\n  // For render\n  const getStation = station => stations.find(item => item.id == station) || {};\n\n  const colors = {\n    red: \"#d22531\",\n    blue: \"#2060ba\",\n    green: \"#41a747\",\n    text: \"#09303b\",\n    textDisable: \"#9c98a6\"\n  };\n</script>\n\n<style lang=\"scss\">\n  @import \"src/styles/base.scss\";\n\n  .container {\n    display: flex;\n  }\n  aside {\n    background: #f0f0f0;\n    padding: 10px;\n  }\n  .station {\n    opacity: 0.1;\n  }\n  .fadein {\n    opacity: 1;\n  }\n  .map {\n    display: block;\n    width: 500px;\n    margin: 50px auto;\n\n    &-active {\n      .station {\n        opacity: 1;\n      }\n    }\n  }\n\n  .start-button {\n    @include button;\n    margin-bottom: 20px;\n  }\n\n  .aside-row {\n    font-size: 12px;\n    display: flex;\n    justify-content: space-between;\n\n    &__name {\n      padding-bottom: 7px;\n      margin-bottom: -2px;\n\n      &.active,\n      &:hover {\n        background: #ccc;\n      }\n\n      :global(tspan) {\n        pointer-events: none;\n      }\n    }\n\n    &__stations {\n      flex: 1;\n    }\n\n    &__weight {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      padding-bottom: 7px;\n      margin-bottom: -2px;\n      margin-left: 16px;\n\n      &:before {\n        content: \"\";\n        position: absolute;\n        display: block;\n        top: 0;\n        right: 4px;\n        bottom: 22px;\n        width: 2px;\n        background: #000;\n      }\n    }\n  }\n</style>\n\n<div class=\"container\">\n\n  <aside>\n    <button class=\"start-button\" on:click={onPlay}>Play</button>\n\n    {#each resultPath as gap, index}\n      <div class=\"aside-row\">\n        <div class=\"aside-row__stations\">\n          {#each gap.stations as station, indexInside}\n            <div\n              class=\"aside-row__name {gap.counter - gap.stations.length + indexInside + 1 === showingRow ? 'active' : ''}\"\n              on:mouseenter={() => onStationHover(getStation(station).id)}\n              on:mouseout={disableStationHover}>\n              {@html getStation(station).text}\n            </div>\n          {/each}\n        </div>\n        <div class=\"aside-row__weight\">{gap.weight}</div>\n      </div>\n    {/each}\n  </aside>\n\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    class=\"map {isMapActive ? 'map-active' : ''}\"\n    font-family=\"Tahoma\"\n    viewBox=\"0 0 1501 2151\">\n\n    <defs>\n      <symbol id=\"w\">\n        <path\n          fill=\"#fff\"\n          d=\"M6.6 11.5a4.9 4.9 0 110-9.8A4.8 4.8 0 019.7 3a9.7 9.7 0 004.5\n          2v3.5a9.7 9.7 0 00-3.9 1.6l-.9.6a4.8 4.8 0 01-2.8 1z\" />\n        <path\n          d=\"M6.7 3.5a3 3 0 012 .7 11.5 11.5 0 003.7 2V7a11.4 11.4 0 00-3.1\n          1.6l-.9.6a3 3 0 01-1.8.6 3.1 3.1 0 110-6.3m0-3.5A6.6 6.6 0 000 6.6a6.6\n          6.6 0 006.6 6.7 6.5 6.5 0 003.8-1.3l.9-.6a8 8 0 014.6-1.4V3.3a8 8 0\n          01-5-1.8A6.5 6.5 0 006.6 0z\" />\n      </symbol>\n    </defs>\n\n    <path\n      fill=\"none\"\n      stroke={colors.green}\n      stroke-width=\"3\"\n      d=\"M747 1310l-18-18-241 241a72 72 0 00-21 51v85h-15v21h56v-21h-16v-85a47\n      47 0 0114-34l46-45 12 12 15-15-12-12z\" />\n\n    <g font-size=\"34\">\n      <text fill={colors.red} transform=\"rotate(-90 1562.5 515.7)\">\n        Холодногірсько-заводська лінія\n      </text>\n      <text fill={colors.blue} transform=\"rotate(-90 700.6 -347.6)\">\n        Салтівська лінія\n      </text>\n      <text fill={colors.green} transform=\"rotate(-90 415.7 -32.8)\">\n        Олексіївська лінія\n      </text>\n    </g>\n    <g fill={colors.text} font-size=\"53\">\n      {#each stationsPath as station, index (station.id)}\n        {#if station}\n          <g class=\"station {showingStation == station.id ? 'fadein' : ''}\">\n            <g\n              fill=\"none\"\n              stroke-miterlimit=\"10\"\n              stroke-width=\"28\"\n              stroke={colors[station.color]}>\n              {@html station.path}\n            </g>\n\n            <g fill={colors[station.color]}>\n              {@html station.stop}\n            </g>\n\n            <text style={station.style}>\n              {@html station.text}\n            </text>\n          </g>\n        {/if}\n      {/each}\n    </g>\n    <g fill={colors.textDisable} font-size=\"53\">\n      <text transform=\"translate(573 1556)\">Державiнська</text>\n      <text transform=\"translate(519 1690)\">Одеська</text>\n    </g>\n  </svg>\n\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let selectedMetro;\n\n// TODO: move to js file\n  const schemes = {\n    kharkiv: {\n      graphUrl: 'https://metro.kh.ua/metroapi.php?value=path',\n      stationsUrl: 'https://metro.kh.ua/metroapi.php?value=stations'\n    },\n    custom: {\n      graphUrl: null,\n      stationsUrl: null\n    }\n  }\n\n  function onChange() {\n    const currentScheme = schemes[selectedMetro];\n\n    dispatch(\"onSelectMetro\", {\n      result: selectedMetro,\n      graphUrl: currentScheme && currentScheme.graphUrl,\n      stationsUrl: currentScheme && currentScheme.stationsUrl\n    });\n  }\n</script>\n\n<style>\n  section {\n    margin-bottom: 30px;\n  }\n</style> \n\n<section>\n  <label>\n    <input type=radio bind:group={selectedMetro} on:change={onChange} value={'kharkiv'}>\n    Kharkiv metro\n  </label>\n\n  <label>\n    <input type=radio bind:group={selectedMetro} on:change={onChange} value={'custom'}>\n    Other metro\n  </label>\n</section>\n\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // let graphJson = '';\n\n  let source, target, weight, jsonUrl;\n  \n  // $: links = [];\n\n  // function onAdd() {\n  //   links = [...links, {\n  //     source,\n  //     target,\n  //     weight\n  //   }];\n\n  //   source = '';\n  //   target = '';\n  //   weight = '';\n\n  // }\n\n  // function onRemove(item) {\n  //   links = links.filter(link => link !== item);\n  // }\n\n  function onSubmit() {\n    dispatch(\"onSubmitGraph\", {\n      graphUrl: jsonUrl,\n      stationsUrl: ''\n    });\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"src/styles/base.scss\";\n\n  section {\n    margin-bottom: 30px;\n    display: flex;\n  }\n\n  .json-input {\n    padding: 8px 10px;\n    border: 1px solid #bbb;\n    font-size: 16px;\n    border-radius: 4px;\n    width: 100%;\n    margin-right: 8px;\n  }\n\n  .json-button {\n    @include button;\n  }\n</style> \n\n<section>\n  <!-- <p>Links:</p>\n  {#each links as link, index}\n     <p>{link.source} ←→ {link.target} = {link.weight} <button on:click={() => onRemove(link)}>Remove</button> </p> \n  {/each}\n\n  <div>\n  <input bind:value={source} type=\"text\"/>\n  <input bind:value={target} type=\"text\"/>\n  <input bind:value={weight} type=\"number\"/>\n\n  <button on:click={onAdd}>Send</button>\n  </div> -->\n\n  <input class=\"json-input\" bind:value={jsonUrl} type=\"text\"/>\n\n  <button class=\"json-button\" on:click={onSubmit}>Send</button>\n</section>","// A graph data structure with depth-first search and topological sort.\nmodule.exports = function Graph(serialized){\n\n  // The returned graph instance.\n  var graph = {\n    addNode: addNode,\n    removeNode: removeNode,\n    nodes: nodes,\n    adjacent: adjacent,\n    addEdge: addEdge,\n    removeEdge: removeEdge,\n    setEdgeWeight: setEdgeWeight,\n    getEdgeWeight: getEdgeWeight,\n    indegree: indegree,\n    outdegree: outdegree,\n    depthFirstSearch: depthFirstSearch,\n    lowestCommonAncestors: lowestCommonAncestors,\n    topologicalSort: topologicalSort,\n    shortestPath: shortestPath,\n    serialize: serialize,\n    deserialize: deserialize\n  };\n\n  // The adjacency list of the graph.\n  // Keys are node ids.\n  // Values are adjacent node id arrays.\n  var edges = {};\n\n  // The weights of edges.\n  // Keys are string encodings of edges.\n  // Values are weights (numbers).\n  var edgeWeights = {};\n\n  // If a serialized graph was passed into the constructor, deserialize it.\n  if(serialized){\n    deserialize(serialized);\n  }\n\n  // Adds a node to the graph.\n  // If node was already added, this function does nothing.\n  // If node was not already added, this function sets up an empty adjacency list.\n  function addNode(node){\n    edges[node] = adjacent(node);\n    return graph;\n  }\n\n  // Removes a node from the graph.\n  // Also removes incoming and outgoing edges.\n  function removeNode(node){\n\n    // Remove incoming edges.\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(function (v){\n        if(v === node){\n          removeEdge(u, v);\n        }\n      });\n    });\n\n    // Remove outgoing edges (and signal that the node no longer exists).\n    delete edges[node];\n\n    return graph;\n  }\n\n  // Gets the list of nodes that have been added to the graph.\n  function nodes(){\n    var nodeSet = {};\n    Object.keys(edges).forEach(function (u){\n      nodeSet[u] = true;\n      edges[u].forEach(function (v){\n        nodeSet[v] = true;\n      });\n    });\n    return Object.keys(nodeSet);\n  }\n\n  // Gets the adjacent node list for the given node.\n  // Returns an empty array for unknown nodes.\n  function adjacent(node){\n    return edges[node] || [];\n  }\n\n  // Computes a string encoding of an edge,\n  // for use as a key in an object.\n  function encodeEdge(u, v){\n    return u + \"|\" + v;\n  }\n\n  // Sets the weight of the given edge.\n  function setEdgeWeight(u, v, weight){\n    edgeWeights[encodeEdge(u, v)] = weight;\n    return graph;\n  }\n\n  // Gets the weight of the given edge.\n  // Returns 1 if no weight was previously set.\n  function getEdgeWeight(u, v){\n    var weight = edgeWeights[encodeEdge(u, v)];\n    return weight === undefined ? 1 : weight;\n  }\n\n  // Adds an edge from node u to node v.\n  // Implicitly adds the nodes if they were not already added.\n  function addEdge(u, v, weight){\n    addNode(u);\n    addNode(v);\n    adjacent(u).push(v);\n\n    if (weight !== undefined) {\n      setEdgeWeight(u, v, weight);\n    }\n\n    return graph;\n  }\n\n  // Removes the edge from node u to node v.\n  // Does not remove the nodes.\n  // Does nothing if the edge does not exist.\n  function removeEdge(u, v){\n    if(edges[u]){\n      edges[u] = adjacent(u).filter(function (_v){\n        return _v !== v;\n      });\n    }\n    return graph;\n  }\n\n  // Computes the indegree for the given node.\n  // Not very efficient, costs O(E) where E = number of edges.\n  function indegree(node){\n    var degree = 0;\n    function check(v){\n      if(v === node){\n        degree++;\n      }\n    }\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(check);\n    });\n    return degree;\n  }\n\n  // Computes the outdegree for the given node.\n  function outdegree(node){\n    return node in edges ? edges[node].length : 0;\n  }\n\n  // Depth First Search algorithm, inspired by\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 604\n  // This variant includes an additional option\n  // `includeSourceNodes` to specify whether to include or\n  // exclude the source nodes from the result (true by default).\n  // If `sourceNodes` is not specified, all nodes in the graph\n  // are used as source nodes.\n  function depthFirstSearch(sourceNodes, includeSourceNodes){\n\n    if(!sourceNodes){\n      sourceNodes = nodes();\n    }\n\n    if(typeof includeSourceNodes !== \"boolean\"){\n      includeSourceNodes = true;\n    }\n\n    var visited = {};\n    var nodeList = [];\n\n    function DFSVisit(node){\n      if(!visited[node]){\n        visited[node] = true;\n        adjacent(node).forEach(DFSVisit);\n        nodeList.push(node);\n      }\n    }\n\n    if(includeSourceNodes){\n      sourceNodes.forEach(DFSVisit);\n    } else {\n      sourceNodes.forEach(function (node){\n        visited[node] = true;\n      });\n      sourceNodes.forEach(function (node){\n        adjacent(node).forEach(DFSVisit);\n      });\n    }\n\n    return nodeList;\n  }\n\n  // Least Common Ancestors\n  // Inspired by https://github.com/relaxedws/lca/blob/master/src/LowestCommonAncestor.php code\n  // but uses depth search instead of breadth. Also uses some optimizations\n  function lowestCommonAncestors(node1, node2){\n\n    var node1Ancestors = [];\n    var lcas = [];\n\n    function CA1Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        node1Ancestors.push(node);\n        if (node == node2) {\n          lcas.push(node);\n          return false; // found - shortcut\n        }\n        return adjacent(node).every(node => {\n          return CA1Visit(visited, node);\n        });\n      } else {\n        return true;\n      }\n    }\n\n    function CA2Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        if (node1Ancestors.indexOf(node) >= 0) {\n          lcas.push(node);\n        } else if (lcas.length == 0) {\n          adjacent(node).forEach(node => {\n            CA2Visit(visited, node);\n          });\n        }\n      }\n    }\n\n    if (CA1Visit({}, node1)) { // No shortcut worked\n      CA2Visit({}, node2);\n    }\n\n    return lcas;\n  }\n\n  // The topological sort algorithm yields a list of visited nodes\n  // such that for each visited edge (u, v), u comes before v in the list.\n  // Amazingly, this comes from just reversing the result from depth first search.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 613\n  function topologicalSort(sourceNodes, includeSourceNodes){\n    return depthFirstSearch(sourceNodes, includeSourceNodes).reverse();\n  }\n\n  // Dijkstra's Shortest Path Algorithm.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 658\n  // Variable and function names correspond to names in the book.\n  function shortestPath(source, destination){\n\n    // Upper bounds for shortest path weights from source.\n    var d = {};\n\n    // Predecessors.\n    var p = {};\n\n    // Poor man's priority queue, keyed on d.\n    var q = {};\n\n    function initializeSingleSource(){\n      nodes().forEach(function (node){\n        d[node] = Infinity;\n      });\n      if (d[source] !== Infinity) {\n        throw new Error(\"Source node is not in the graph\");\n      }\n      if (d[destination] !== Infinity) {\n        throw new Error(\"Destination node is not in the graph\");\n      }\n      d[source] = 0;\n    }\n\n    // Adds entries in q for all nodes.\n    function initializePriorityQueue(){\n      nodes().forEach(function (node){\n        q[node] = true;\n      });\n    }\n\n    // Returns true if q is empty.\n    function priorityQueueEmpty(){\n      return Object.keys(q).length === 0;\n    }\n\n    // Linear search to extract (find and remove) min from q.\n    function extractMin(){\n      var min = Infinity;\n      var minNode;\n      Object.keys(q).forEach(function(node){\n        if (d[node] < min) {\n          min = d[node];\n          minNode = node;\n        }\n      });\n      if (minNode === undefined) {\n        // If we reach here, there's a disconnected subgraph, and we're done.\n        q = {};\n        return null;\n      }\n      delete q[minNode];\n      return minNode;\n    }\n\n    function relax(u, v){\n      var w = getEdgeWeight(u, v);\n      if (d[v] > d[u] + w) {\n        d[v] = d[u] + w;\n        p[v] = u;\n      }\n    }\n\n    function dijkstra(){\n      initializeSingleSource();\n      initializePriorityQueue();\n      while(!priorityQueueEmpty()){\n        var u = extractMin();\n        adjacent(u).forEach(function (v){\n          relax(u, v);\n        });\n      }\n    }\n\n    // Assembles the shortest path by traversing the\n    // predecessor subgraph from destination to source.\n    function path(){\n      var nodeList = [];\n      var weight = 0;\n      var node = destination;\n      while(p[node]){\n        nodeList.push(node);\n        weight += getEdgeWeight(p[node], node);\n        node = p[node];\n      }\n      if (node !== source) {\n        throw new Error(\"No path found\");\n      }\n      nodeList.push(node);\n      nodeList.reverse();\n      nodeList.weight = weight;\n      return nodeList;\n    }\n\n    dijkstra();\n\n    return path();\n  }\n\n  // Serializes the graph.\n  function serialize(){\n    var serialized = {\n      nodes: nodes().map(function (id){\n        return { id: id };\n      }),\n      links: []\n    };\n\n    serialized.nodes.forEach(function (node){\n      var source = node.id;\n      adjacent(source).forEach(function (target){\n        serialized.links.push({\n          source: source,\n          target: target,\n          weight: getEdgeWeight(source, target)\n        });\n      });\n    });\n\n    return serialized;\n  }\n\n  // Deserializes the given serialized graph.\n  function deserialize(serialized){\n    serialized.nodes.forEach(function (node){ addNode(node.id); });\n    serialized.links.forEach(function (link){ addEdge(link.source, link.target, link.weight); });\n    return graph;\n  }\n\n  return graph;\n}\n","import Graph from \"graph-data-structure\";\n\nexport default function createGraph(data) {\n  const INTERVAL_TIME = 6;\n\n  function getWeight(weight) {\n    return weight + INTERVAL_TIME;\n  }\n\n  const graph = Graph();\n\n  data\n    .map(item => ({\n      ...item,\n      weight: getWeight(item.weight)\n    }))\n    .map(item => {\n      graph.addEdge(item.from, item.to, item.weight);\n      graph.addEdge(item.to, item.from, item.weight);\n    });\n\n  let stationsBetween = [];\n\n  graph.nodes().map((i, index) => {\n    stationsBetween.push([]);\n    \n    graph.nodes().map((j, insideIndex) => {\n      const path = graph.shortestPath(i, j);\n      const cleanPath = path;\n      stationsBetween[index].push(cleanPath);\n    });\n  });\n\n  graph.nodes().map((i, index) => {\n    graph.nodes().map((j, insideIndex) => {\n      const path = graph.shortestPath(i, j);\n      graph.addEdge(i, j, path.weight);\n    });\n  });\n\n  const distances = countDistances(graph);\n\n  return { graph, stationsBetween, distances };\n}\n\nfunction countDistances(graph) {\n  const points = graph.nodes();\n  const length = points.length;\n\n  return Array.apply(null, Array(length)).map((item, index) =>\n    Array.apply(null, Array(length)).map(\n      (item, insideIndex) =>\n        ~~graph.getEdgeWeight(points[index], points[insideIndex])\n    )\n  );\n}\n","import createGraph from \"./graphBuilder\";\n\nlet cache = {};\n\nexport async function getGraph(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n  return createGraph(data);\n}\nexport async function getStations(url) {\n  const res = await fetch(url);\n  const data = await res.json();\n  return data;\n};\n\nexport async function getData(variable, func) {\n  if (cache[variable]) {\n    return cache[variable];\n  }\n  const result = await func();\n  cache[variable] = result;\n  return result;\n}","<script>\n  import PathCalculate from \"./pathCalculate/PathCalculate.svelte\";\n  import SchemeRender from \"./SchemeRender.svelte\";\n  import GraphSwitcher from \"./GraphSwitcher/GraphSwitcher.svelte\";\n  import UserMetroGraph from \"./GraphSwitcher/UserMetroGraph.svelte\";\n  import { getGraph, getStations, getData } from \"./graphSwitcher/getData\";\n\n  let graphUrl, stationsUrl, selectedMetro;\n  let bestPath, stations, graph, stationsBetween, dis;\n  let isCalculateShowed = false;\n  let isCustomShowed = false;\n\n  function onSelectMetro(e) {\n    selectedMetro = e.detail.result;\n    graphUrl = e.detail.graphUrl;\n    stationsUrl = e.detail.stationsUrl;\n\n    resetData();\n\n    if(!graphUrl && !stationsUrl) {\n      return isCustomShowed = true;\n    }\n    setData();\n    return isCustomShowed = false;\n  }\n\n  function getResult(e) {\n    bestPath = e.detail.result;\n  }\n\n  function resetData() {\n    bestPath = null;\n    stations = null;\n    isCalculateShowed = false;\n  }\n\n  async function onGetUserGraph(e) {\n    graphUrl = e.detail.graphUrl;\n    stationsUrl = e.detail.stationsUrl;\n    setData();\n  }\n  async function setGraph(url) {\n    const graphData = await getData(`${selectedMetro}-graphData`, () => getGraph(url));\n    graph = graphData.graph;\n    stationsBetween = graphData.stationsBetween;\n    dis = graphData.distances;\n  }\n  async function setStations(url) {\n    const stationsData = await getData(`${selectedMetro}-stations`, () => getStations(url));\n    stations = stationsData;\n  }\n  async function setData() {\n    if(graphUrl) await setGraph(graphUrl);\n    isCalculateShowed = true;\n    \n    if(stationsUrl) await setStations(stationsUrl);\n  }\n</script>\n\n<style global lang=\"scss\">\n  @import \"src/styles/index.scss\";\n\n  main {\n    display: block;\n    @include centered;\n    margin-bottom: 40px;\n  }\n\n  header {\n    @include centered;\n    display: block;\n    margin-top: 20px;\n    margin-bottom: 40px;\n  }\n</style>\n\n<header>\n  <h1>Transit challenge solver</h1>\n  <p>For Kharkiv metropoliten</p>\n</header>\n\n<main>\n  <GraphSwitcher on:onSelectMetro={onSelectMetro} {selectedMetro} />\n\n  {#if isCustomShowed}\n    <UserMetroGraph on:onSubmitGraph={onGetUserGraph} />\n  {/if}\n\n  {#if graph && stationsBetween && dis && isCalculateShowed}\n    <PathCalculate {graph} {stationsBetween} {dis} on:getResult={getResult} />\n  {/if}\n\n  {#if stations && bestPath}\n    <SchemeRender path={bestPath} {stationsBetween} {stations} />\n  {/if}\n</main>\n","import { randomNumber } from \"./randomNumber\";\n\nexport default function initArrayPrototypes() {\n  Array.prototype.clone = function() {\n    return this.slice(0);\n  };\n  Array.prototype.max = function() {\n    return Math.max.apply(null, this);\n  };\n  Array.prototype.min = function() {\n    return Math.min.apply(null, this);\n  };\n  Array.prototype.shuffle = function() {\n    if(!this.length) return this;\n    for (\n      var j, x, i = this.length - 1;\n      i;\n      j = randomNumber(i), x = this[--i], this[i] = this[j], this[j] = x\n    );\n    return this;\n  };\n  Array.prototype.indexOf = function(value) {\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === value) {\n        return i;\n      }\n    }\n  };\n  Array.prototype.deleteByValue = function(value) {\n    var pos = this.indexOf(value);\n    this.splice(pos, 1);\n  };\n  Array.prototype.next = function(index) {\n    if (index === this.length - 1) {\n      return this[0];\n    } else {\n      return this[index + 1];\n    }\n  };\n  Array.prototype.previous = function(index) {\n    if (index === 0) {\n      return this[this.length - 1];\n    } else {\n      return this[index - 1];\n    }\n  };\n  Array.prototype.swap = function(x, y) {\n    if (x > this.length || y > this.length || x === y) {\n      return;\n    }\n    var tem = this[x];\n    this[x] = this[y];\n    this[y] = tem;\n  };\n  Array.prototype.roll = function() {\n    var rand = randomNumber(this.length);\n    var tem = [];\n    for (var i = rand; i < this.length; i++) {\n      tem.push(this[i]);\n    }\n    for (var i = 0; i < rand; i++) {\n      tem.push(this[i]);\n    }\n    return tem;\n  };\n}","import App from './App.svelte';\nimport initArrayPrototypes from \"./helpers/arrayExtends\";\n\ninitArrayPrototypes();\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","to_number","undefined","set_data","set_input_value","input","set_style","key","important","style","setProperty","HtmlTag","[object Object]","html","this","e","u","n","t","innerHTML","Array","from","childNodes","m","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","createEventDispatcher","type","detail","callbacks","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","destroy_block","lookup","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","ret","hydrate","l","children","intro","SvelteComponent","$destroy","index","indexOf","splice","zeroPadded","number","toString","formatTime","milliseconds","Math","floor","lapse","rotation","seconds","minutes","transitioned","transition","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","time","beginningTime","Date","getTime","interval","setInterval","currentTime","clearInterval","unsubscribe","running","terminate","item","graph","nodes","best","currentBest","bestValue","population","currentGeneration","mutationsCount","crossoversCount","bestValuesString","bestPopulation","bestValuesArray","bestPosition","join","mutationCount","crossoverCount","randomNumber","boundary","parseInt","random","mutationIteration","array","reverseMutate","seq","reverse","reverseMutateMath","doMutate","j","swap","doMutateMath","pushMutate","s1","s2","s3","concat","clone","pushMutateMath","doCrossover","x","y","dis","newPopulation","child1","getChild","child2","fun","dx","dy","solution","px","py","deleteByValue","wheelOut","roulette","rand","onStart","onStop","populationSize","crossoverProbability","mutationProbability","intervalDuration","dispatch","mainInterval","stationsBetween","values","render","parents","fitnessValues","sum","reduce","tempSum","el","createRoulette","selection","queue","shuffle","crossover","mutation","setBestValue","indivial","evaluate","min","getCurrentBest","stationsCount","apply","keys","randomIndivial","GAInitialize","result","getStation","station","gap","counter","stations","indexInside","showingRow","mouseenter_handler","disableStationHover","weight","path","colors","color","showingStation","id","resultPath","stationsPath","green","red","blue","textDisable","isMapActive","onPlay","old_blocks","changed","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","ANIMATION_DURATION","timerId","onStationHover","rowIndex","clearListInterval","showStation","calculatePath","newStationsPath","firstIndex","secondIndex","currentGap","getResultPath","find","initInterval","onChange","selectedMetro","schemes","kharkiv","graphUrl","stationsUrl","custom","currentScheme","onSubmit","jsonUrl","serialized","addNode","removeNode","edges","v","removeEdge","adjacent","addEdge","setEdgeWeight","getEdgeWeight","indegree","degree","check","outdegree","depthFirstSearch","lowestCommonAncestors","node1","node2","node1Ancestors","lcas","CA1Visit","visited","every","CA2Visit","topologicalSort","sourceNodes","includeSourceNodes","shortestPath","source","destination","q","extractMin","minNode","Infinity","relax","w","initializeSingleSource","dijkstra","nodeList","serialize","links","deserialize","edgeWeights","nodeSet","encodeEdge","_v","DFSVisit","link","createGraph","INTERVAL_TIME","getWeight","Graph","to","insideIndex","cleanPath","distances","points","countDistances","cache","async","getData","variable","func","onGetUserGraph","getResult","bestPath","onSelectMetro","isCalculateShowed","isCustomShowed","setGraph","url","graphData","res","fetch","json","getGraph","setStations","stationsData","getStations","setData","prototype","max","pos","previous","tem","roll","body"],"mappings":"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"}