{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/transition/index.mjs","../src/stopWatch/utils.js","../src/stopWatch/StopWatchSVG.svelte","../node_modules/svelte/store/index.mjs","../src/stopWatch/stores.js","../src/stopWatch/StopWatch.svelte","../src/pathCalculate/ResultGrid.svelte","../src/pathCalculate/store.js","../src/helpers/randomNumber.js","../src/pathCalculate/algorithm.js","../src/pathCalculate/mutations.js","../src/pathCalculate/PathCalculate.svelte","../src/pathCalculate/helper.js","../src/SchemeRender.svelte","../src/GraphSwitcher/schemes.js","../src/GraphSwitcher/GraphSwitcher.svelte","../src/GraphSwitcher/UserMetroGraph.svelte","../node_modules/graph-data-structure/index.js","../src/graphSwitcher/graphBuilder.js","../src/graphSwitcher/getData.js","../src/App.svelte","../src/helpers/arrayExtends.js","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","function zeroPadded(number) {\r\n    return number >= 10 ? number.toString() : `0${number}`;\r\n}\r\n\r\nfunction last2Digits(number) {\r\n    return number.toString().slice(-2);\r\n}\r\n\r\nexport function formatTime(milliseconds) {\r\n    const mm = zeroPadded(Math.floor(milliseconds / 1000 / 60));\r\n    const ss = zeroPadded(Math.floor(milliseconds / 1000) % 60);\r\n    const t = last2Digits(Math.floor(milliseconds / 10));\r\n    return `${mm}:${ss}.${t}`;\r\n}","<script>\r\n  import { formatTime } from \"./utils.js\";\r\n\r\n  export let lapse = 0;\r\n\r\n  $: rotation = ((lapse / 1000 / 60) * 360) % 360;\r\n  let seconds;\r\n  let minutes;\r\n  let transitioned;\r\n\r\n  $: if (!lapse && minutes && seconds) {\r\n    minutes.style.transition = \"transform 0.2s ease-in-out\";\r\n    seconds.style.transition = \"transform 0.2s ease-in-out\";\r\n    transitioned = false;\r\n  }\r\n  $: if (lapse && !transitioned) {\r\n    minutes.style.transition = \"none\";\r\n    seconds.style.transition = \"none\";\r\n    transitioned = true;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  svg {\r\n    font-family: monospace;\r\n    color: hsl(0, 0%, 5%);\r\n  }\r\n</style>\r\n\r\n<svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n  <g transform=\"translate(50 50)\">\r\n    <circle\r\n      cx=\"0\"\r\n      cy=\"0\"\r\n      r=\"42\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"6\"\r\n      stroke-dasharray=\"0.3 1.898\"\r\n      transform=\"scale(-1 1)\"/>\r\n\r\n    <g bind:this={minutes} transform=\"rotate({rotation})\">\r\n      <g transform=\"translate(0 -50)\">\r\n        <path\r\n          d=\"M -2.25 0 h 4.5 l -2.25 2.5 l -2.25 -2.5\"\r\n          fill=\"currentColor\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"1\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-linecap=\"round\" />\r\n      </g>\r\n    </g>\r\n\r\n    <g\r\n      transform=\"translate(0 20)\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"0.4\"\r\n      fill=\"none\">\r\n      <g bind:this={seconds} transform=\"rotate({(rotation * 60) % 360})\">\r\n        <path\r\n          d=\"M 0 -1 v -7.5\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-linecap=\"round\" />\r\n      </g>\r\n      <circle r=\"9\" />\r\n      <circle r=\"1\" />\r\n    </g>\r\n\r\n    <text\r\n      text-anchor=\"middle\"\r\n      fill=\"currentColor\"\r\n      dominant-baseline=\"middle\"\r\n      font-size=\"14\"\r\n      style=\"font-weight: 300; letter-spacing: 1px;\">\r\n      {formatTime(lapse)}\r\n    </text>\r\n  </g>\r\n</svg>\r\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from \"svelte/store\";\r\n\r\nexport const time = readable(0, function start(set) {\r\n  const beginning = new Date();\r\n  const beginningTime = beginning.getTime();\r\n\r\n  const interval = setInterval(() => {\r\n    const currentTime = new Date().getTime();\r\n    set(currentTime - beginningTime);\r\n  }, 10);\r\n\r\n  return function stop() {\r\n    set(0);\r\n    clearInterval(interval);\r\n  };\r\n});\r\n","<script>\r\n  import { onDestroy } from \"svelte\";\r\n  import StopWatchSVG from \"./StopWatchSVG.svelte\";\r\n  import { time } from \"./stores.js\";\r\n\r\n  export let running = false;\r\n\r\n  let lapse = 0;\r\n  let unsubscribe;\r\n\r\n  $: if (running) {\r\n    stop();\r\n    start();\r\n  } else {\r\n    terminate();\r\n  }\r\n\r\n  function start() {\r\n    unsubscribe = time.subscribe(value => {\r\n      lapse = value;\r\n    });\r\n  }\r\n\r\n  function terminate() {\r\n    if (unsubscribe) {\r\n      unsubscribe();\r\n      unsubscribe = null;\r\n    }\r\n  }\r\n\r\n  function stop() {\r\n    lapse = 0;\r\n    terminate();\r\n  }\r\n\r\n  onDestroy(() => {\r\n    terminate();\r\n  });\r\n</script>\r\n\r\n<div class=\"stopwatch\">\r\n  <StopWatchSVG {lapse}/>\r\n</div>\r\n","<script>\r\n  import StopWatch from \"../stopWatch/StopWatch.svelte\";\r\n\r\n  export let running;\r\n  export let graph;\r\n  export let currentGeneration;\r\n  export let mutationsCount;\r\n  export let crossoversCount;\r\n  export let bestValue;\r\n  export let currentBest;\r\n  export let population;\r\n  export let best;\r\n  export let bestValuesArray;\r\n\r\n  $: bestPopulation =\r\n    population[currentBest.bestPosition] ?\r\n    population[currentBest.bestPosition].toString() : '';\r\n\r\n  $: bestValuesString = bestValuesArray.join(\" > \").toString();\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .info {\r\n    font-family: \"Courier New\", Courier, monospace;\r\n    display: flex;\r\n  }\r\n  .table {\r\n    max-width: 300px;\r\n    flex: 1;\r\n    padding: 10px;\r\n  }\r\n  .stop-watch {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 16px;\r\n  }\r\n  .paths {\r\n    padding: 10px 30px;\r\n    flex: 2;\r\n  }\r\n  .paths-row {\r\n      margin-bottom: 10px;\r\n    }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n  }\r\n  .row-result {\r\n    flex-direction: column;\r\n\r\n    .label {\r\n      margin-top: 10px;\r\n    }\r\n    .value {\r\n      font-size: 30px;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n  .value {\r\n    margin-left: auto;\r\n  }\r\n\r\n  p { \r\n      font-size: 11px;\r\n      line-height: 1.2;\r\n  }\r\n</style>\r\n\r\n<div class=\"info\">\r\n  <div class=\"table\">\r\n    <div class=\"stop-watch\">\r\n      <StopWatch {running} />\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"label\">Stations:</div>\r\n      <div class=\"value\">{graph.nodes().length}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"label\">Generation:</div>\r\n      <div class=\"value\">{currentGeneration}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"label\">Mutations:</div>\r\n      <div class=\"value\">{mutationsCount}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"label\">Crossovers:</div>\r\n      <div class=\"value\">{crossoversCount}</div>\r\n    </div>\r\n    <div class=\"row row-result\">\r\n      <div class=\"label\">Best result:</div>\r\n      <div class=\"value\">{ bestValue}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"paths\">\r\n    <div class=\"paths-row\">\r\n      <div class=\"label-row\">Сhange of the best result</div>\r\n      <div class=\"value-row\">\r\n        <p>{bestValuesString}</p>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"paths-row\">\r\n      <div class=\"label-row\">Best path</div>\r\n      <div class=\"value-row\">\r\n        <p>{best.toString()}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"paths-row\">\r\n      <div class=\"label-row\">Best path in current population</div>\r\n      <div class=\"value-row\">\r\n        <p>{bestPopulation}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"paths-row\">\r\n      <div class=\"label-row\">Best value in population</div>\r\n      <div class=\"value-row\">\r\n        <p>{currentBest.bestValue}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"paths-row\">\r\n      <div class=\"label-row\">Population</div>\r\n      <div class=\"value-row\">\r\n        {#each population as item}\r\n          <p>{item.toString()}</p>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { writable } from 'svelte/store';\r\n\r\nexport const mutationCount = writable(0);\r\nexport const crossoverCount = writable(0);","export function randomNumber(boundary) {\r\n  return parseInt(Math.random() * boundary);\r\n}","import { randomNumber } from \"../helpers/randomNumber\";\r\nimport { pushMutateMath, doMutateMath, reverseMutateMath } from \"./mutations\";\r\nimport { mutationCount, crossoverCount } from \"./store.js\";\r\n\r\n// Functions with side effects\r\nfunction mutationIteration(array) {\r\n  mutationCount.update(n => n + 1);\r\n  return array;\r\n}\r\nconst reverseMutate = seq => mutationIteration(reverseMutateMath(seq));\r\nconst doMutate = seq => mutationIteration(doMutateMath(seq));\r\nconst pushMutate = seq => mutationIteration(pushMutateMath(seq));\r\n\r\n// Main components\r\nexport function selection(population, currentBest, best, values, populationSize) {\r\n  let newPopulation = population.clone();\r\n\r\n  let parents = new Array();\r\n  let initnum = 5;\r\n  parents.push(newPopulation[currentBest.bestPosition]);\r\n  parents.push(doMutate(best.clone()));\r\n  parents.push(pushMutate(best.clone()));\r\n  parents.push(reverseMutate(best.clone()));\r\n  parents.push(best.clone());\r\n\r\n  const roulette = createRoulette(values);\r\n\r\n  for (let i = initnum; i < populationSize; i++) {\r\n    parents.push(newPopulation[wheelOut(roulette)]);\r\n  }\r\n  newPopulation = parents;\r\n\r\n  return newPopulation;\r\n}\r\n\r\nexport function mutation(population, populationSize, mutationProbability) {\r\n  let newPopulation = population.clone();\r\n  for (let i = 0; i < populationSize; i++) {\r\n    if (Math.random() < mutationProbability) {\r\n      if (Math.random() > 0.5) {\r\n        newPopulation[i] = doMutate(population[i]);\r\n      } else {\r\n        newPopulation[i] = pushMutate(population[i]);\r\n      }\r\n      i--;\r\n    }\r\n  }\r\n  return newPopulation;\r\n}\r\n\r\nexport function crossover(population, dis, populationSize, crossoverProbability) {\r\n  let queue = new Array();\r\n  for (let i = 0; i < populationSize; i++) {\r\n    if (Math.random() < crossoverProbability) {\r\n      queue.push(i);\r\n    }\r\n  }\r\n  queue.shuffle();\r\n  for (let i = 0, j = queue.length - 1; i < j; i += 2) {\r\n    population = doCrossover(queue[i], queue[i + 1], population, dis);\r\n    crossoverCount.update(n => n + 1);\r\n  }\r\n\r\n  return population;\r\n}\r\n\r\n// Helper functions\r\nfunction createRoulette(values = []) {\r\n  const fitnessValues = values.map(item => 1.0 / item);\r\n  const sum = fitnessValues.reduce((tempSum, el) => (tempSum += el));\r\n\r\n  let tempSum;\r\n  return fitnessValues\r\n    .map(item => item / sum)\r\n    .map(item => (tempSum = (tempSum || 0) + item));\r\n}\r\n\r\nfunction doCrossover(x, y, population, dis) {\r\n  let newPopulation = population.clone();\r\n\r\n  let child1 = getChild(\"next\", x, y, newPopulation, dis);\r\n  let child2 = getChild(\"previous\", x, y, newPopulation, dis);\r\n  newPopulation[x] = child1;\r\n  newPopulation[y] = child2;\r\n\r\n  return newPopulation;\r\n}\r\n\r\nfunction getChild(fun, x, y, population, dis) {\r\n  let solution = new Array();\r\n  let px = population[x].clone();\r\n  let py = population[y].clone();\r\n  let dx, dy;\r\n  let c = px[randomNumber(px.length)];\r\n  solution.push(c);\r\n  while (px.length > 1) {\r\n    dx = px[fun](px.indexOf(c));\r\n    dy = py[fun](py.indexOf(c));\r\n    px.deleteByValue(c);\r\n    py.deleteByValue(c);\r\n    c = dis[c][dx] < dis[c][dy] ? dx : dy;\r\n    solution.push(c);\r\n  }\r\n  return solution;\r\n}\r\n\r\nfunction wheelOut(roulette = []) {\r\n  const rand = Math.random();\r\n  roulette.forEach((item, i) => {\r\n    if (rand <= item) {\r\n      return i;\r\n    }\r\n  });\r\n  return 0;\r\n}\r\n","import { randomNumber } from \"../helpers/randomNumber\";\r\n\r\nexport function pushMutateMath(seq) {\r\n  var m, n;\r\n  do {\r\n    m = randomNumber(seq.length >> 1);\r\n    n = randomNumber(seq.length);\r\n  } while (m >= n);\r\n\r\n  var s1 = seq.slice(0, m);\r\n  var s2 = seq.slice(m, n);\r\n  var s3 = seq.slice(n, seq.length);\r\n  return s2\r\n    .concat(s1)\r\n    .concat(s3)\r\n    .clone();\r\n}\r\n\r\nexport function doMutateMath(seq) {\r\n  let m, n;\r\n    do {\r\n      m = randomNumber(seq.length - 2);\r\n      n = randomNumber(seq.length);\r\n    } while (m >= n);\r\n\r\n    for (var i = 0, j = (n - m + 1) >> 1; i < j; i++) {\r\n      seq.swap(m + i, n - i);\r\n    }\r\n    return seq;\r\n}\r\n\r\nexport function reverseMutateMath(seq) {\r\n  const reversed = seq.reverse();\r\n\r\n  return reversed;\r\n}\r\n\r\n// No use\r\n// export function preciseMutate(orseq, dis) {\r\n//   var seq = orseq.clone();\r\n//   if (Math.random() > 0.5) {\r\n//     seq.reverse();\r\n//   }\r\n//   var bestv = evaluate(seq, dis);\r\n//   for (var i = 0; i < seq.length >> 1; i++) {\r\n//     for (var j = i + 2; j < seq.length - 1; j++) {\r\n//       var new_seq = swap_seq(seq, i, i + 1, j, j + 1);\r\n//       var v = evaluate(new_seq, dis);\r\n//       if (v < bestv) {\r\n//         bestv = v;\r\n//         seq = new_seq;\r\n//       }\r\n//     }\r\n//   }\r\n//   return seq;\r\n// }\r\n// export function preciseMutate1(orseq, dis) {\r\n//   var seq = orseq.clone();\r\n//   var bestv = evaluate(seq, dis);\r\n\r\n//   for (var i = 0; i < seq.length - 1; i++) {\r\n//     var new_seq = seq.clone();\r\n//     new_seq.swap(i, i + 1);\r\n//     var v = evaluate(new_seq, dis);\r\n//     if (v < bestv) {\r\n//       bestv = v;\r\n//       seq = new_seq;\r\n//     }\r\n//   }\r\n//   return seq;\r\n// }\r\n// function swap_seq(seq, p0, p1, q0, q1) {\r\n//   var seq1 = seq.slice(0, p0);\r\n//   var seq2 = seq.slice(p1 + 1, q1);\r\n//   seq2.push(seq[p0]);\r\n//   seq2.push(seq[p1]);\r\n//   var seq3 = seq.slice(q1, seq.length);\r\n//   return seq1.concat(seq2).concat(seq3);\r\n// }","<script>\r\n  import { fly } from 'svelte/transition';\r\n  import { onDestroy } from 'svelte';\r\n  import ResultGrid from \"./ResultGrid.svelte\";\r\n  import { mutationCount, crossoverCount } from \"./store.js\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { randomNumber } from \"../helpers/randomNumber\";\r\n  import { evaluate, randomIndivial, getCurrentBest } from \"./helper\";\r\n  import { selection, mutation, crossover } from \"./algorithm\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // constants\r\n  let populationSize = 20;\r\n  let crossoverProbability = 0.9;\r\n  let mutationProbability = 0.1;\r\n  let intervalDuration = 40;\r\n\r\n  export let graph;\r\n  export let stationsBetween;\r\n  export let dis;\r\n\r\n  let running = false;\r\n  let mainInterval;\r\n\r\n  let currentGeneration = 0;\r\n  let bestValue = 0;\r\n  let bestValuesArray = [];\r\n  let best = [];\r\n  let currentBest = {\r\n    bestPosition: 0,\r\n    bestValue: []\r\n  };\r\n  let population = [];\r\n  let values = [];\r\n  let mutationsCount;\r\n  let crossoversCount;\r\n\r\n  const unsubscribeMutation = mutationCount.subscribe(value => mutationsCount = value );\r\n  const unsubscribeCrossover = crossoverCount.subscribe(value => crossoversCount = value );\r\n\r\n  onDestroy(() => {\r\n\t\tclearInterval(mainInterval);\r\n\t});\r\n\r\n  function onStart() {\r\n    if (!running) {\r\n      GAStart();\r\n      running = true;\r\n    }\r\n  }\r\n\r\n  function onStop() {\r\n    if (running) {\r\n      GAStop();\r\n      running = false;\r\n    }\r\n  }\r\n\r\n  function GAStop() {\r\n    clearInterval(mainInterval);\r\n    dispatch(\"getResult\", {\r\n      result: best\r\n    });\r\n  }\r\n\r\n  function GAStart() {\r\n    initData();\r\n    GAInitialize();\r\n    mainInterval = setInterval(render, intervalDuration);\r\n  }\r\n\r\n  function initData() {\r\n    currentGeneration = 0;\r\n    bestValue = undefined;\r\n    best = [];\r\n    bestValuesArray = [];\r\n    currentBest = 0;\r\n    population = [];\r\n    values = new Array(populationSize);\r\n    mutationCount.update(n => 0);\r\n    crossoverCount.update(n => 0);\r\n  }\r\n\r\n  function render() {\r\n    GANextGeneration();\r\n  }\r\n\r\n  function GAInitialize() {\r\n    const stationsCount = graph.nodes().length;\r\n    population = Array.apply(null, Array(populationSize)).map(item =>\r\n      randomIndivial(stationsCount)\r\n    );\r\n    setBestValue();\r\n  }\r\n\r\n  function GANextGeneration() {\r\n    currentGeneration++;\r\n    population = selection(population, currentBest, best, values, populationSize);\r\n    population = crossover(population, dis, populationSize, crossoverProbability);\r\n    population = mutation(population, populationSize, mutationProbability);\r\n    setBestValue();\r\n  }\r\n\r\n  function setBestValue() {\r\n    values = population.map(item => evaluate(item, dis));\r\n    currentBest = getCurrentBest(values);\r\n\r\n    if (bestValue === undefined || bestValue > currentBest.bestValue) {\r\n      best = population[currentBest.bestPosition].clone();\r\n      bestValue = currentBest.bestValue;\r\n      bestValuesArray = [...bestValuesArray, bestValue];\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import \"src/styles/base.scss\";\r\n\r\n  .calculate-block {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .result-wrapper {\r\n    @include section;\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .constants {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n  }\r\n  label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 12px;\r\n    margin-right: 20px;\r\n\r\n    span {\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n  .text-input {\r\n    @include text-input;\r\n    width: 70px;\r\n  }\r\n  .buttons {\r\n    margin-left: auto;\r\n  }\r\n  .startButton {\r\n    @include button;\r\n    margin-left: 10px;\r\n  }\r\n</style>\r\n\r\n<div class=\"calculate-block\" in:fly=\"{{ y: 50, duration: 1000 }}\">\r\n\r\n  <div class=\"result-wrapper\">\r\n    <div class=\"constants\">\r\n      <label>\r\n        <span>Population size:</span>\r\n        <input\r\n          class=\"text-input\"\r\n          bind:value={populationSize}\r\n          type=\"number\"\r\n          step=\"1\"\r\n          min=\"1\"\r\n          max=\"50\" />\r\n      </label>\r\n      <label>\r\n        <span>Crossover probability:</span>\r\n        <input\r\n          class=\"text-input\"\r\n          bind:value={crossoverProbability}\r\n          type=\"number\"\r\n          step=\"0.1\"\r\n          min=\"0.01\"\r\n          max=\"1\" />\r\n      </label>\r\n      <label>\r\n        <span>Mutation probability:</span>\r\n        <input\r\n          class=\"text-input\"\r\n          bind:value={mutationProbability}\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          min=\"0.01\"\r\n          max=\"1\" />\r\n      </label>\r\n      <label>\r\n        <span>Interval duration:</span>\r\n        <input\r\n          disabled={running}\r\n          class=\"text-input\"\r\n          bind:value={intervalDuration}\r\n          type=\"number\"\r\n          step=\"20\"\r\n          min=\"10\"\r\n          max=\"3000\" />\r\n      </label>\r\n\r\n      <div class=\"buttons\">\r\n        <button class=\"startButton protrude\" on:click={onStart}>Start</button>\r\n        <button class=\"startButton protrude\" on:click={onStop}>Stop</button>\r\n      </div>\r\n    </div>\r\n\r\n    <ResultGrid\r\n      {running}\r\n      {graph}\r\n      {currentGeneration}\r\n      {mutationsCount}\r\n      {crossoversCount}\r\n      {bestValue}\r\n      {currentBest}\r\n      {population}\r\n      {best}\r\n      {bestValuesArray} />\r\n  </div>\r\n</div>\r\n","export function evaluate(indivial, dis) {\r\n  return indivial.reduce(\r\n    (sum, element, index, array) => (sum += dis[element][array[index - 1]])\r\n  );\r\n}\r\n\r\nexport function randomIndivial(length) {\r\n  return Array.from(Array(length).keys()).shuffle();\r\n}\r\n\r\nexport function getCurrentBest(values) {\r\n  const min = values.min();\r\n\r\n  return {\r\n    bestValue: min,\r\n    bestPosition: values.indexOf(min)\r\n  };\r\n}","<script>\r\n  import { fly } from 'svelte/transition';\r\n\r\n  export let stationsBetween, path, stations;\r\n\r\n  let isMapActive = true;\r\n  let resultPath = [];\r\n  let stationsPath = [];\r\n  let timerId;\r\n  let showingStation,\r\n    showingRow = null;\r\n\r\n  const ANIMATION_DURATION = 200;\r\n\r\n  // Events\r\n  function onStationHover(index, rowIndex) {\r\n    clearListInterval();\r\n    showStation(index);\r\n    showingRow = null;\r\n  }\r\n  function onPlay() {\r\n    clearListInterval();\r\n    initInterval();\r\n  }\r\n\r\n  function initInterval() {\r\n    let index = 0;\r\n    timerId = setInterval(() => {\r\n      if (index < stationsPath.length) {\r\n        showStation(stationsPath[index].id);\r\n        showingRow = index;\r\n        index++;\r\n      } else {\r\n        clearListInterval();\r\n        disableStationHover();\r\n      }\r\n    }, ANIMATION_DURATION);\r\n  }\r\n  function clearListInterval() {\r\n    showingRow = null;\r\n    clearInterval(timerId);\r\n  }\r\n  function showStation(index) {\r\n    isMapActive = false;\r\n    showingStation = index;\r\n  }\r\n  function disableStationHover() {\r\n    isMapActive = true;\r\n    showingStation = null;\r\n  }\r\n\r\n  $: stationsPath = calculatePath({ path, stationsBetween });\r\n\r\n  function getResultPath({ path = [], stationsBetween }) {\r\n    let resultPath = new Array(path.length);\r\n    let resultWeight = [];\r\n    let counter = 0;\r\n\r\n    for (let i = 1; i < path.length; i++) {\r\n      const firstIndex = path[i - 1];\r\n      const secondIndex = path[i];\r\n      const currentGap = stationsBetween[firstIndex][secondIndex];\r\n      counter += currentGap.length - 1;\r\n\r\n      resultPath[i] = {\r\n        stations: currentGap.slice(1),\r\n        weight: currentGap.weight,\r\n        counter\r\n      };\r\n\r\n      \r\n    }\r\n\r\n    resultPath[0] = {\r\n      stations: [path[0].toString()],\r\n      weight: 0,\r\n      counter: 0\r\n    };\r\n\r\n    return resultPath;\r\n  }\r\n\r\n  function calculatePath({ path = [], stationsBetween }) {\r\n    let newStationsPath = [];\r\n\r\n    resultPath = getResultPath({ path, stationsBetween });\r\n\r\n    resultPath.map(gap => {\r\n      gap.stations.map(item => {\r\n        newStationsPath.push(stations.find(station => station.id == item));\r\n      });\r\n    });\r\n\r\n    return newStationsPath;\r\n  }\r\n\r\n  // For render\r\n  const getStation = station => stations.find(item => item.id == station) || {};\r\n\r\n  const colors = {\r\n    red: \"#d22531\",\r\n    blue: \"#2060ba\",\r\n    green: \"#41a747\",\r\n    text: \"#09303b\",\r\n    textDisable: \"#9c98a6\"\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import \"src/styles/base.scss\";\r\n\r\n  .container {\r\n    display: flex;\r\n  }\r\n  aside {\r\n    background: #f0f0f0;\r\n    padding: 10px;\r\n  }\r\n  .station {\r\n    opacity: 0.1;\r\n  }\r\n  .fadein {\r\n    opacity: 1;\r\n  }\r\n  .map {\r\n    display: block;\r\n    width: 500px;\r\n    margin: 50px auto;\r\n\r\n    &-active {\r\n      .station {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  .start-button {\r\n    @include button;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .aside-row {\r\n    font-size: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    &__name {\r\n      padding-bottom: 7px;\r\n      margin-bottom: -2px;\r\n\r\n      &.active,\r\n      &:hover {\r\n        background: #ccc;\r\n      }\r\n\r\n      :global(tspan) {\r\n        pointer-events: none;\r\n      }\r\n    }\r\n\r\n    &__stations {\r\n      flex: 1;\r\n    }\r\n\r\n    &__weight {\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      padding-bottom: 7px;\r\n      margin-bottom: -2px;\r\n      margin-left: 16px;\r\n\r\n      &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        display: block;\r\n        top: 0;\r\n        right: 4px;\r\n        bottom: 22px;\r\n        width: 2px;\r\n        background: #000;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" in:fly=\"{{ y: 50, duration: 1000 }}\" >\r\n\r\n  <aside>\r\n    <button class=\"start-button\" on:click={onPlay}>Play</button>\r\n\r\n    {#each resultPath as gap, index}\r\n      <div class=\"aside-row\">\r\n        <div class=\"aside-row__stations\">\r\n          {#each gap.stations as station, indexInside}\r\n            <div\r\n              class=\"aside-row__name {gap.counter - gap.stations.length + indexInside + 1 === showingRow ? 'active' : ''}\"\r\n              on:mouseenter={() => onStationHover(getStation(station).id)}\r\n              on:mouseout={disableStationHover}>\r\n              {@html getStation(station).text}\r\n            </div>\r\n          {/each}\r\n        </div>\r\n        <div class=\"aside-row__weight\">{gap.weight}</div>\r\n      </div>\r\n    {/each}\r\n  </aside>\r\n\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n    class=\"map {isMapActive ? 'map-active' : ''}\"\r\n    font-family=\"Tahoma\"\r\n    viewBox=\"0 0 1501 2151\">\r\n\r\n    <defs>\r\n      <symbol id=\"w\">\r\n        <path\r\n          fill=\"#fff\"\r\n          d=\"M6.6 11.5a4.9 4.9 0 110-9.8A4.8 4.8 0 019.7 3a9.7 9.7 0 004.5\r\n          2v3.5a9.7 9.7 0 00-3.9 1.6l-.9.6a4.8 4.8 0 01-2.8 1z\" />\r\n        <path\r\n          d=\"M6.7 3.5a3 3 0 012 .7 11.5 11.5 0 003.7 2V7a11.4 11.4 0 00-3.1\r\n          1.6l-.9.6a3 3 0 01-1.8.6 3.1 3.1 0 110-6.3m0-3.5A6.6 6.6 0 000 6.6a6.6\r\n          6.6 0 006.6 6.7 6.5 6.5 0 003.8-1.3l.9-.6a8 8 0 014.6-1.4V3.3a8 8 0\r\n          01-5-1.8A6.5 6.5 0 006.6 0z\" />\r\n      </symbol>\r\n    </defs>\r\n\r\n    <path\r\n      fill=\"none\"\r\n      stroke={colors.green}\r\n      stroke-width=\"3\"\r\n      d=\"M747 1310l-18-18-241 241a72 72 0 00-21 51v85h-15v21h56v-21h-16v-85a47\r\n      47 0 0114-34l46-45 12 12 15-15-12-12z\" />\r\n\r\n    <g font-size=\"34\">\r\n      <text fill={colors.red} transform=\"rotate(-90 1562.5 515.7)\">\r\n        Холодногірсько-заводська лінія\r\n      </text>\r\n      <text fill={colors.blue} transform=\"rotate(-90 700.6 -347.6)\">\r\n        Салтівська лінія\r\n      </text>\r\n      <text fill={colors.green} transform=\"rotate(-90 415.7 -32.8)\">\r\n        Олексіївська лінія\r\n      </text>\r\n    </g>\r\n    <g fill={colors.text} font-size=\"53\">\r\n      {#each stationsPath as station, index (station.id)}\r\n        {#if station}\r\n          <g class=\"station {showingStation == station.id ? 'fadein' : ''}\">\r\n            <g\r\n              fill=\"none\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-width=\"28\"\r\n              stroke={colors[station.color]}>\r\n              {@html station.path}\r\n            </g>\r\n\r\n            <g fill={colors[station.color]}>\r\n              {@html station.stop}\r\n            </g>\r\n\r\n            <text style={station.style}>\r\n              {@html station.text}\r\n            </text>\r\n          </g>\r\n        {/if}\r\n      {/each}\r\n    </g>\r\n    <g fill={colors.textDisable} font-size=\"53\">\r\n      <text transform=\"translate(573 1556)\">Державiнська</text>\r\n      <text transform=\"translate(519 1690)\">Одеська</text>\r\n    </g>\r\n  </svg>\r\n\r\n</div>\r\n","const schemes = [\r\n  {\r\n    id: 1,\r\n    name: \"Kharkiv metro\",\r\n    graphUrl: \"https://metro.kh.ua/metroapi.php?value=path\",\r\n    stationsUrl: \"https://metro.kh.ua/metroapi.php?value=stations\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Other metro\",\r\n    graphUrl: null,\r\n    stationsUrl: null\r\n  }\r\n]\r\n\r\nexport default schemes;\r\n","<script>\r\n  import { onMount } from 'svelte';\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import schemes from './schemes';\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let selectedMetro, timeOnStation;\r\n\r\n  function onChange() {\r\n    const currentScheme = schemes.find(item => item.id === selectedMetro);\r\n\r\n    dispatch(\"onSelectMetro\", {\r\n      result: selectedMetro,\r\n      timeOnStation: timeOnStation,\r\n      graphUrl: currentScheme && currentScheme.graphUrl,\r\n      stationsUrl: currentScheme && currentScheme.stationsUrl\r\n    });\r\n  }\r\n\r\n  onMount(() => {\r\n    selectedMetro = schemes && schemes.length && schemes[0].id;\r\n    timeOnStation = 5;\r\n    onChange();\r\n\t});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  section {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .input-number {\r\n    padding: 8px 10px;\r\n    border: 1px solid #bbb;\r\n    font-size: 16px;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    margin-right: 8px;\r\n\r\n    width: 140px;\r\n  }\r\n\r\n  .text-field {\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n    font-size: 12px;\r\n    margin-right: 20px;\r\n\r\n    span {\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n\r\n  .radio-input {\r\n    margin-right: 20px;\r\n  }\r\n</style> \r\n\r\n<section>\r\n  <label class=\"text-field\">\r\n    <span>Station stay time, min</span>\r\n    <input class=\"input-number\" bind:value={timeOnStation} type=\"number\" on:change={onChange} min=\"0\" max=\"10\"/>\r\n  </label>\r\n\r\n  {#each schemes as { id, name }}\r\n    <label class=\"radio-input\"><input type='radio' bind:group={selectedMetro} on:change={onChange} value={id}>{name}</label>\r\n  {/each} \r\n</section>\r\n","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let jsonUrl;\r\n\r\n  function onSubmit() {\r\n    dispatch(\"onSubmitGraph\", {\r\n      graphUrl: jsonUrl\r\n    });\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  @import \"src/styles/base.scss\";\r\n\r\n  section {\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n\r\n    input {\r\n      padding: 8px 10px;\r\n      border: 1px solid #bbb;\r\n      font-size: 16px;\r\n      border-radius: 4px;\r\n      width: 100%;\r\n      margin-right: 8px;\r\n    }\r\n\r\n    button {\r\n      @include button;\r\n    }\r\n  }\r\n</style> \r\n\r\n<section>\r\n  <input bind:value={jsonUrl} type=\"text\"/>\r\n  <button on:click={onSubmit}>Send</button>\r\n</section>","// A graph data structure with depth-first search and topological sort.\nmodule.exports = function Graph(serialized){\n\n  // The returned graph instance.\n  var graph = {\n    addNode: addNode,\n    removeNode: removeNode,\n    nodes: nodes,\n    adjacent: adjacent,\n    addEdge: addEdge,\n    removeEdge: removeEdge,\n    setEdgeWeight: setEdgeWeight,\n    getEdgeWeight: getEdgeWeight,\n    indegree: indegree,\n    outdegree: outdegree,\n    depthFirstSearch: depthFirstSearch,\n    lowestCommonAncestors: lowestCommonAncestors,\n    topologicalSort: topologicalSort,\n    shortestPath: shortestPath,\n    serialize: serialize,\n    deserialize: deserialize\n  };\n\n  // The adjacency list of the graph.\n  // Keys are node ids.\n  // Values are adjacent node id arrays.\n  var edges = {};\n\n  // The weights of edges.\n  // Keys are string encodings of edges.\n  // Values are weights (numbers).\n  var edgeWeights = {};\n\n  // If a serialized graph was passed into the constructor, deserialize it.\n  if(serialized){\n    deserialize(serialized);\n  }\n\n  // Adds a node to the graph.\n  // If node was already added, this function does nothing.\n  // If node was not already added, this function sets up an empty adjacency list.\n  function addNode(node){\n    edges[node] = adjacent(node);\n    return graph;\n  }\n\n  // Removes a node from the graph.\n  // Also removes incoming and outgoing edges.\n  function removeNode(node){\n\n    // Remove incoming edges.\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(function (v){\n        if(v === node){\n          removeEdge(u, v);\n        }\n      });\n    });\n\n    // Remove outgoing edges (and signal that the node no longer exists).\n    delete edges[node];\n\n    return graph;\n  }\n\n  // Gets the list of nodes that have been added to the graph.\n  function nodes(){\n    var nodeSet = {};\n    Object.keys(edges).forEach(function (u){\n      nodeSet[u] = true;\n      edges[u].forEach(function (v){\n        nodeSet[v] = true;\n      });\n    });\n    return Object.keys(nodeSet);\n  }\n\n  // Gets the adjacent node list for the given node.\n  // Returns an empty array for unknown nodes.\n  function adjacent(node){\n    return edges[node] || [];\n  }\n\n  // Computes a string encoding of an edge,\n  // for use as a key in an object.\n  function encodeEdge(u, v){\n    return u + \"|\" + v;\n  }\n\n  // Sets the weight of the given edge.\n  function setEdgeWeight(u, v, weight){\n    edgeWeights[encodeEdge(u, v)] = weight;\n    return graph;\n  }\n\n  // Gets the weight of the given edge.\n  // Returns 1 if no weight was previously set.\n  function getEdgeWeight(u, v){\n    var weight = edgeWeights[encodeEdge(u, v)];\n    return weight === undefined ? 1 : weight;\n  }\n\n  // Adds an edge from node u to node v.\n  // Implicitly adds the nodes if they were not already added.\n  function addEdge(u, v, weight){\n    addNode(u);\n    addNode(v);\n    adjacent(u).push(v);\n\n    if (weight !== undefined) {\n      setEdgeWeight(u, v, weight);\n    }\n\n    return graph;\n  }\n\n  // Removes the edge from node u to node v.\n  // Does not remove the nodes.\n  // Does nothing if the edge does not exist.\n  function removeEdge(u, v){\n    if(edges[u]){\n      edges[u] = adjacent(u).filter(function (_v){\n        return _v !== v;\n      });\n    }\n    return graph;\n  }\n\n  // Computes the indegree for the given node.\n  // Not very efficient, costs O(E) where E = number of edges.\n  function indegree(node){\n    var degree = 0;\n    function check(v){\n      if(v === node){\n        degree++;\n      }\n    }\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(check);\n    });\n    return degree;\n  }\n\n  // Computes the outdegree for the given node.\n  function outdegree(node){\n    return node in edges ? edges[node].length : 0;\n  }\n\n  // Depth First Search algorithm, inspired by\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 604\n  // This variant includes an additional option\n  // `includeSourceNodes` to specify whether to include or\n  // exclude the source nodes from the result (true by default).\n  // If `sourceNodes` is not specified, all nodes in the graph\n  // are used as source nodes.\n  function depthFirstSearch(sourceNodes, includeSourceNodes){\n\n    if(!sourceNodes){\n      sourceNodes = nodes();\n    }\n\n    if(typeof includeSourceNodes !== \"boolean\"){\n      includeSourceNodes = true;\n    }\n\n    var visited = {};\n    var nodeList = [];\n\n    function DFSVisit(node){\n      if(!visited[node]){\n        visited[node] = true;\n        adjacent(node).forEach(DFSVisit);\n        nodeList.push(node);\n      }\n    }\n\n    if(includeSourceNodes){\n      sourceNodes.forEach(DFSVisit);\n    } else {\n      sourceNodes.forEach(function (node){\n        visited[node] = true;\n      });\n      sourceNodes.forEach(function (node){\n        adjacent(node).forEach(DFSVisit);\n      });\n    }\n\n    return nodeList;\n  }\n\n  // Least Common Ancestors\n  // Inspired by https://github.com/relaxedws/lca/blob/master/src/LowestCommonAncestor.php code\n  // but uses depth search instead of breadth. Also uses some optimizations\n  function lowestCommonAncestors(node1, node2){\n\n    var node1Ancestors = [];\n    var lcas = [];\n\n    function CA1Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        node1Ancestors.push(node);\n        if (node == node2) {\n          lcas.push(node);\n          return false; // found - shortcut\n        }\n        return adjacent(node).every(node => {\n          return CA1Visit(visited, node);\n        });\n      } else {\n        return true;\n      }\n    }\n\n    function CA2Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        if (node1Ancestors.indexOf(node) >= 0) {\n          lcas.push(node);\n        } else if (lcas.length == 0) {\n          adjacent(node).forEach(node => {\n            CA2Visit(visited, node);\n          });\n        }\n      }\n    }\n\n    if (CA1Visit({}, node1)) { // No shortcut worked\n      CA2Visit({}, node2);\n    }\n\n    return lcas;\n  }\n\n  // The topological sort algorithm yields a list of visited nodes\n  // such that for each visited edge (u, v), u comes before v in the list.\n  // Amazingly, this comes from just reversing the result from depth first search.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 613\n  function topologicalSort(sourceNodes, includeSourceNodes){\n    return depthFirstSearch(sourceNodes, includeSourceNodes).reverse();\n  }\n\n  // Dijkstra's Shortest Path Algorithm.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 658\n  // Variable and function names correspond to names in the book.\n  function shortestPath(source, destination){\n\n    // Upper bounds for shortest path weights from source.\n    var d = {};\n\n    // Predecessors.\n    var p = {};\n\n    // Poor man's priority queue, keyed on d.\n    var q = {};\n\n    function initializeSingleSource(){\n      nodes().forEach(function (node){\n        d[node] = Infinity;\n      });\n      if (d[source] !== Infinity) {\n        throw new Error(\"Source node is not in the graph\");\n      }\n      if (d[destination] !== Infinity) {\n        throw new Error(\"Destination node is not in the graph\");\n      }\n      d[source] = 0;\n    }\n\n    // Adds entries in q for all nodes.\n    function initializePriorityQueue(){\n      nodes().forEach(function (node){\n        q[node] = true;\n      });\n    }\n\n    // Returns true if q is empty.\n    function priorityQueueEmpty(){\n      return Object.keys(q).length === 0;\n    }\n\n    // Linear search to extract (find and remove) min from q.\n    function extractMin(){\n      var min = Infinity;\n      var minNode;\n      Object.keys(q).forEach(function(node){\n        if (d[node] < min) {\n          min = d[node];\n          minNode = node;\n        }\n      });\n      if (minNode === undefined) {\n        // If we reach here, there's a disconnected subgraph, and we're done.\n        q = {};\n        return null;\n      }\n      delete q[minNode];\n      return minNode;\n    }\n\n    function relax(u, v){\n      var w = getEdgeWeight(u, v);\n      if (d[v] > d[u] + w) {\n        d[v] = d[u] + w;\n        p[v] = u;\n      }\n    }\n\n    function dijkstra(){\n      initializeSingleSource();\n      initializePriorityQueue();\n      while(!priorityQueueEmpty()){\n        var u = extractMin();\n        adjacent(u).forEach(function (v){\n          relax(u, v);\n        });\n      }\n    }\n\n    // Assembles the shortest path by traversing the\n    // predecessor subgraph from destination to source.\n    function path(){\n      var nodeList = [];\n      var weight = 0;\n      var node = destination;\n      while(p[node]){\n        nodeList.push(node);\n        weight += getEdgeWeight(p[node], node);\n        node = p[node];\n      }\n      if (node !== source) {\n        throw new Error(\"No path found\");\n      }\n      nodeList.push(node);\n      nodeList.reverse();\n      nodeList.weight = weight;\n      return nodeList;\n    }\n\n    dijkstra();\n\n    return path();\n  }\n\n  // Serializes the graph.\n  function serialize(){\n    var serialized = {\n      nodes: nodes().map(function (id){\n        return { id: id };\n      }),\n      links: []\n    };\n\n    serialized.nodes.forEach(function (node){\n      var source = node.id;\n      adjacent(source).forEach(function (target){\n        serialized.links.push({\n          source: source,\n          target: target,\n          weight: getEdgeWeight(source, target)\n        });\n      });\n    });\n\n    return serialized;\n  }\n\n  // Deserializes the given serialized graph.\n  function deserialize(serialized){\n    serialized.nodes.forEach(function (node){ addNode(node.id); });\n    serialized.links.forEach(function (link){ addEdge(link.source, link.target, link.weight); });\n    return graph;\n  }\n\n  return graph;\n}\n","import Graph from \"graph-data-structure\";\r\n\r\nexport default function createGraph(data = [], timeOnStation = 0) {\r\n  function getWeight(weight) {\r\n    return weight + timeOnStation;\r\n  }\r\n\r\n  const graphTemp = Graph();\r\n  const graph = Graph();\r\n\r\n  data\r\n    .map(item => ({\r\n      ...item,\r\n      weight: getWeight(item.weight)\r\n    }))\r\n    .map(item => {\r\n      graphTemp.addEdge(item.from, item.to, item.weight);\r\n      graphTemp.addEdge(item.to, item.from, item.weight);\r\n    });\r\n\r\n  let stationsBetween = [];\r\n\r\n  graphTemp.nodes().map((i, index) => {\r\n    stationsBetween.push([]);\r\n\r\n    graphTemp.nodes().map(j => {\r\n      const path = graphTemp.shortestPath(i, j);\r\n      // TODO: Maybe subtract time of station * path.length\r\n      graph.addEdge(i, j, path.weight);\r\n      stationsBetween[index].push(path);\r\n    });\r\n  });\r\n\r\n  const distances = countDistances(graph);\r\n\r\n  return { graph, stationsBetween, distances };\r\n}\r\n\r\nfunction countDistances(graph) {\r\n  const points = graph.nodes();\r\n  const length = points.length;\r\n\r\n  return Array.apply(null, Array(length)).map((item, index) =>\r\n    Array.apply(null, Array(length)).map(\r\n      (item, insideIndex) =>\r\n        ~~graph.getEdgeWeight(points[index], points[insideIndex])\r\n    )\r\n  );\r\n}\r\n","import createGraph from \"./graphBuilder\";\r\n\r\nlet cache = {};\r\n\r\nexport async function getGraph(url, timeOnStation) {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n  return createGraph(data, timeOnStation);\r\n}\r\nexport async function getStations(url) {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nexport async function getData(variable, func) {\r\n  if (cache[variable]) {\r\n    return cache[variable];\r\n  }\r\n  const result = await func();\r\n  cache[variable] = result;\r\n  return result;\r\n}","<script>\r\n  import PathCalculate from \"./pathCalculate/PathCalculate.svelte\";\r\n  import SchemeRender from \"./SchemeRender.svelte\";\r\n  import GraphSwitcher from \"./GraphSwitcher/GraphSwitcher.svelte\";\r\n  import UserMetroGraph from \"./GraphSwitcher/UserMetroGraph.svelte\";\r\n  import { getGraph, getStations, getData } from \"./graphSwitcher/getData\";\r\n\r\n  let graphUrl, stationsUrl, selectedMetro, timeOnStation;\r\n  let bestPath, stations, graph, stationsBetween, dis;\r\n  let isCalculateShowed = false;\r\n  let isCustomShowed = false;\r\n\r\n  function onSelectMetro(e) {\r\n    selectedMetro = e.detail.result;\r\n    graphUrl = e.detail.graphUrl;\r\n    stationsUrl = e.detail.stationsUrl;\r\n    timeOnStation = e.detail.timeOnStation;\r\n\r\n    resetData();\r\n\r\n    if(!graphUrl && !stationsUrl) {\r\n      return isCustomShowed = true;\r\n    }\r\n    setData();\r\n    return isCustomShowed = false;\r\n  }\r\n\r\n  function getResult(e) {\r\n    bestPath = e.detail.result;\r\n  }\r\n\r\n  function resetData() {\r\n    bestPath = null;\r\n    stations = null;\r\n    isCalculateShowed = false;\r\n  }\r\n\r\n  async function onGetUserGraph(e) {\r\n    graphUrl = e.detail.graphUrl;\r\n    stationsUrl = e.detail.stationsUrl;\r\n    setData();\r\n  }\r\n  async function setGraph(url) {\r\n    const graphData = await getData(`${selectedMetro + timeOnStation}-graphData`, () => getGraph(url, timeOnStation));\r\n    graph = graphData.graph;\r\n    stationsBetween = graphData.stationsBetween;\r\n    dis = graphData.distances;\r\n  }\r\n  async function setStations(url) {\r\n    const stationsData = await getData(`${selectedMetro + timeOnStation}-stations`, () => getStations(url));\r\n    stations = stationsData;\r\n  }\r\n  async function setData() {\r\n    if(graphUrl) await setGraph(graphUrl);\r\n    isCalculateShowed = true;\r\n    \r\n    if(stationsUrl) await setStations(stationsUrl);\r\n  }\r\n</script>\r\n\r\n<style global lang=\"scss\">\r\n  @import \"src/styles/index.scss\";\r\n\r\n  main {\r\n    display: block;\r\n    @include centered;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  header {\r\n    @include centered;\r\n    display: block;\r\n    margin-top: 20px;\r\n    margin-bottom: 40px;\r\n  }\r\n</style>\r\n\r\n<header>\r\n  <h1>Transit challenge solver</h1>\r\n  <p>For Kharkiv metropoliten</p>\r\n</header>\r\n\r\n<main>\r\n  <GraphSwitcher on:onSelectMetro={onSelectMetro} />\r\n\r\n  {#if isCustomShowed}\r\n    <UserMetroGraph on:onSubmitGraph={onGetUserGraph} />\r\n  {/if}\r\n\r\n  {#if graph && stationsBetween && dis && isCalculateShowed}\r\n    <PathCalculate {graph} {stationsBetween} {dis} on:getResult={getResult} />\r\n  {/if}\r\n\r\n  {#if stations && bestPath}\r\n    <SchemeRender path={bestPath} {stationsBetween} {stations} />\r\n  {/if}\r\n</main>\r\n","import { randomNumber } from \"./randomNumber\";\r\n\r\nexport default function initArrayPrototypes() {\r\n  Array.prototype.clone = function() {\r\n    return this.slice(0);\r\n  };\r\n  Array.prototype.max = function() {\r\n    return Math.max.apply(null, this);\r\n  };\r\n  Array.prototype.min = function() {\r\n    return Math.min.apply(null, this);\r\n  };\r\n  Array.prototype.shuffle = function() {\r\n    if(!this.length) return this;\r\n    for (\r\n      var j, x, i = this.length - 1;\r\n      i;\r\n      j = randomNumber(i), x = this[--i], this[i] = this[j], this[j] = x\r\n    );\r\n    return this;\r\n  };\r\n  Array.prototype.indexOf = function(value) {\r\n    for (var i = 0; i < this.length; i++) {\r\n      if (this[i] === value) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n  Array.prototype.deleteByValue = function(value) {\r\n    var pos = this.indexOf(value);\r\n    this.splice(pos, 1);\r\n  };\r\n  Array.prototype.next = function(index) {\r\n    if (index === this.length - 1) {\r\n      return this[0];\r\n    } else {\r\n      return this[index + 1];\r\n    }\r\n  };\r\n  Array.prototype.previous = function(index) {\r\n    if (index === 0) {\r\n      return this[this.length - 1];\r\n    } else {\r\n      return this[index - 1];\r\n    }\r\n  };\r\n  Array.prototype.swap = function(x, y) {\r\n    if (x > this.length || y > this.length || x === y) {\r\n      return;\r\n    }\r\n    var tem = this[x];\r\n    this[x] = this[y];\r\n    this[y] = tem;\r\n  };\r\n  Array.prototype.roll = function() {\r\n    var rand = randomNumber(this.length);\r\n    var tem = [];\r\n    for (var i = rand; i < this.length; i++) {\r\n      tem.push(this[i]);\r\n    }\r\n    for (var i = 0; i < rand; i++) {\r\n      tem.push(this[i]);\r\n    }\r\n    return tem;\r\n  };\r\n}","import App from './App.svelte';\r\nimport initArrayPrototypes from \"./helpers/arrayExtends\";\r\n\r\ninitArrayPrototypes();\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","stylesheet","running","run_tasks","task","delete","size","loop","promise","Promise","fulfil","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","to_number","undefined","set_data","set_input_value","input","set_style","key","important","style","setProperty","custom_event","type","detail","e","createEvent","initCustomEvent","HtmlTag","html","this","u","n","t","innerHTML","Array","from","childNodes","m","current_component","active","current_rules","delete_rule","animation","split","filter","anim","indexOf","join","cssRules","deleteRule","set_current_component","component","get_current_component","Error","onDestroy","$$","on_destroy","push","createEventDispatcher","callbacks","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","shift","update","pop","callback","has","fragment","dirty","before_update","p","ctx","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","null_transition","duration","create_in_transition","params","animation_name","config","uid","cleanup","go","delay","easing","tick","css","ease","step","keyframes","rule","str","hash","charCodeAt","head","sheet","insertRule","create_rule","start_time","end_time","abort","started","then","destroy_block","lookup","mount_component","on_mount","new_on_destroy","map","destroy_component","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","ret","hydrate","l","children","intro","SvelteComponent","$destroy","index","splice","cubicOut","f","fly","y","opacity","getComputedStyle","target_opacity","transform","od","zeroPadded","number","toString","formatTime","milliseconds","Math","floor","lapse","rotation","seconds","minutes","transitioned","transition","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","time","beginningTime","getTime","interval","setInterval","currentTime","clearInterval","unsubscribe","terminate","item","graph","nodes","best","currentBest","bestValue","population","currentGeneration","mutationsCount","crossoversCount","bestValuesString","bestPopulation","bestValuesArray","bestPosition","mutationCount","crossoverCount","randomNumber","boundary","parseInt","random","mutationIteration","array","reverseMutate","seq","reverse","reverseMutateMath","doMutate","j","swap","doMutateMath","pushMutate","s1","s2","s3","concat","clone","pushMutateMath","doCrossover","dis","newPopulation","child1","getChild","child2","fun","dx","dy","solution","px","py","deleteByValue","wheelOut","roulette","rand","onStart","onStop","populationSize","crossoverProbability","mutationProbability","intervalDuration","mainInterval","stationsBetween","values","render","parents","fitnessValues","sum","reduce","tempSum","el","createRoulette","selection","queue","shuffle","crossover","mutation","setBestValue","indivial","evaluate","min","getCurrentBest","stationsCount","apply","keys","randomIndivial","GAInitialize","result","getStation","station","gap","counter","stations","indexInside","showingRow","mouseenter_handler","disableStationHover","weight","path","colors","color","showingStation","id","resultPath","stationsPath","green","red","blue","textDisable","isMapActive","onPlay","old_blocks","changed","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","ANIMATION_DURATION","timerId","onStationHover","rowIndex","clearListInterval","showStation","calculatePath","newStationsPath","firstIndex","secondIndex","currentGap","getResultPath","find","initInterval","schemes","graphUrl","stationsUrl","onChange","selectedMetro","timeOnStation","currentScheme","onSubmit","jsonUrl","serialized","addNode","removeNode","edges","v","removeEdge","adjacent","addEdge","setEdgeWeight","getEdgeWeight","indegree","degree","check","outdegree","depthFirstSearch","lowestCommonAncestors","node1","node2","node1Ancestors","lcas","CA1Visit","visited","every","CA2Visit","topologicalSort","sourceNodes","includeSourceNodes","shortestPath","source","destination","q","extractMin","minNode","Infinity","relax","w","initializeSingleSource","dijkstra","nodeList","serialize","links","deserialize","edgeWeights","nodeSet","encodeEdge","_v","DFSVisit","link","createGraph","getWeight","graphTemp","Graph","to","distances","points","insideIndex","countDistances","cache","async","getData","variable","func","onGetUserGraph","getResult","bestPath","onSelectMetro","isCalculateShowed","isCustomShowed","setGraph","url","graphData","res","fetch","json","getGraph","setStations","stationsData","getStations","setData","prototype","max","pos","previous","tem","roll","body"],"mappings":"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"}