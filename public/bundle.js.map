{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/stopWatch/utils.js","../src/stopWatch/StopWatchSVG.svelte","../node_modules/svelte/store/index.mjs","../src/stopWatch/stores.js","../src/stopWatch/StopWatch.svelte","../src/pathCalculate/store.js","../src/helpers/randomNumber.js","../src/pathCalculate/constants.js","../src/pathCalculate/algorithm.js","../src/pathCalculate/mutations.js","../src/pathCalculate/PathCalculate.svelte","../src/pathCalculate/helper.js","../src/SchemeRender.svelte","../node_modules/graph-data-structure/index.js","../src/graphBuilder.js","../src/Scheme.svelte","../src/helpers/arrayExtends.js","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","// utility functions used in the project\n// prepend a zero to integers smaller than 10 (used for the second and minute values)\nfunction zeroPadded(number) {\n  return number >= 10 ? number.toString() : `0${number}`;\n}\n// consider the last digit of the input number (used for the tenths of seconds)\nfunction lastDigit(number) {\n  return number.toString().slice(-2);\n}\n\n/* format time in the following format\nmm:ss:t\nzero padded minutes, zero padded seconds, tenths of seconds\n*/\nexport function formatTime(milliseconds) {\n  const mm = zeroPadded(Math.floor(milliseconds / 1000 / 60));\n  const ss = zeroPadded(Math.floor(milliseconds / 1000) % 60);\n  const t = lastDigit(Math.floor(milliseconds / 10));\n  return `${mm}:${ss}.${t}`;\n}","<script>\n    import { formatTime } from \"./utils.js\";\n\n    export let lapse = 0;\n\n    $: rotation = ((lapse / 1000 / 60) * 360) % 360;\n    let seconds;\n    let minutes;\n    let transitioned;\n\n    $: if (!lapse && minutes && seconds) {\n        minutes.style.transition = \"transform 0.2s ease-in-out\";\n        seconds.style.transition = \"transform 0.2s ease-in-out\";\n        transitioned = false;\n    }\n    $: if (lapse && !transitioned) {\n        minutes.style.transition = \"none\";\n        seconds.style.transition = \"none\";\n        transitioned = true;\n    }\n</script>\n\n<style>\n    svg {\n        font-family: monospace;\n        color: hsl(0, 0%, 5%);\n    }\n</style>\n<svg viewBox=\"0 0 100 100\" width=\"300\" height=\"300\">\n    <g transform=\"translate(50 50)\">\n        <circle id=\"dial\" cx=\"0\" cy=\"0\" r=\"37.8\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"5\" stroke-dasharray=\"0.27 1.7082\"></circle>\n        <use href=\"#dial\" transform=\"scale(-1 1)\"></use>\n\n        <g bind:this=\"{minutes}\" transform=\"rotate({rotation})\">\n            <g transform=\"translate(0 -45)\">\n                <path d=\"M -2.25 0 h 4.5 l -2.25 2.5 l -2.25 -2.5\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"1\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path>\n            </g>\n        </g>\n\n        <g transform=\"translate(0 20)\">\n            <g bind:this=\"{seconds}\" transform=\"rotate({(rotation * 60) % 360})\">\n                <path d=\"M 0 -1 v -7.5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path>\n            </g>\n            <circle r=\"9\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\"></circle>\n            <circle r=\"1\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\"></circle>\n        </g>\n\n        <text text-anchor=\"middle\" fill=\"currentColor\" dominant-baseline=\"middle\" font-size=\"10\" style=\"font-weight: 300; letter-spacing: 1px;\">\n            {formatTime(lapse)}\n        </text>\n    </g>\n</svg>\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from 'svelte/store';\n\n// set up a readable store which returns the number of milliseconds between the moment the store is subscribed and following an interval\nexport const time = readable(0, function start(set) {\n\tconst beginning = new Date();\n\tconst beginningTime = beginning.getTime();\n\n\tconst interval = setInterval(() => {\n\t\tconst current = new Date();\n\t\tconst currentTime = current.getTime();\n\t\tset(currentTime - beginningTime);\n\t}, 10);\n\n\treturn function stop() {\n\t\t// ! forcedly set the readable value to 0 before clearing the interval\n\t\t// it seems the store would otherwise retain the last value and the application would stagger from this value straight to 0\n\t\tset(0);\n\t\tclearInterval(interval);\n\t};\n});","<script>\n  import { onDestroy } from \"svelte\";\n  import StopWatchSVG from \"./StopWatchSVG.svelte\";\n  import { time } from \"./stores.js\";\n\n  export let running = false;\n\n  let lapse = 0;\n  let unsubscribe;\n\n  $: if (running) {\n    stop();\n    start();\n  } else {\n    pause();\n  }\n\n  function start() {\n    unsubscribe = time.subscribe(value => {\n      lapse = value;\n    });\n  }\n\n  function pause() {\n    terminate();\n  }\n\n  function terminate() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = null;\n    }\n  }\n\n  function stop() {\n    lapse = 0;\n    terminate();\n  }\n\n  $: subscription = !!unsubscribe;\n\n  onDestroy(() => {\n    terminate();\n  });\n</script>\n\n<div class=\"stopwatch\">\n  <StopWatchSVG {lapse} />\n</div>\n","import { writable } from 'svelte/store';\n\nexport const count = writable(0);","export function randomNumber(boundary) {\n  return parseInt(Math.random() * boundary);\n}","export const POPULATION_SIZE = 30;\nexport const CROSSOVER_PROBABILITY = 0.9;\nexport const MUTATION_PROBABILITY = 0.1;  \nexport const INTERVAL_DURATION = 20;","import { randomNumber } from \"../helpers/randomNumber\";\nimport { pushMutateMath, doMutateMath, reverseMutateMath } from \"./mutations\";\nimport { count } from \"./store.js\";\nimport {\n  POPULATION_SIZE,\n  CROSSOVER_PROBABILITY,\n  MUTATION_PROBABILITY\n} from \"./constants\";\n\n// Functions with side effects\nfunction mutationIteration(array) {\n  count.update(n => n + 1);\n  return array;\n}\nconst reverseMutate = seq => mutationIteration(reverseMutateMath(seq));\nconst doMutate = seq => mutationIteration(doMutateMath(seq));\nconst pushMutate = seq => mutationIteration(pushMutateMath(seq));\n\n// Main components\nexport function selection(population, currentBest, best, values) {\n  let newPopulation = population.clone();\n\n  let parents = new Array();\n  let initnum = 5;\n  parents.push(newPopulation[currentBest.bestPosition]);\n  parents.push(doMutate(best.clone()));\n  parents.push(pushMutate(best.clone()));\n  parents.push(reverseMutate(best.clone()));\n  parents.push(best.clone());\n\n  const roulette = createRoulette(values);\n\n  for (let i = initnum; i < POPULATION_SIZE; i++) {\n    parents.push(newPopulation[wheelOut(roulette)]);\n  }\n  newPopulation = parents;\n\n  return newPopulation;\n}\n\nexport function mutation(population) {\n  let newPopulation = population.clone();\n  for (let i = 0; i < POPULATION_SIZE; i++) {\n    if (Math.random() < MUTATION_PROBABILITY) {\n      if (Math.random() > 0.5) {\n        newPopulation[i] = doMutate(population[i]);\n      } else {\n        newPopulation[i] = pushMutate(population[i]);\n      }\n      i--;\n    }\n  }\n  return newPopulation;\n}\n\nexport function crossover(population, dis) {\n  let queue = new Array();\n  for (let i = 0; i < POPULATION_SIZE; i++) {\n    if (Math.random() < CROSSOVER_PROBABILITY) {\n      queue.push(i);\n    }\n  }\n  queue.shuffle();\n  for (let i = 0, j = queue.length - 1; i < j; i += 2) {\n    population = doCrossover(queue[i], queue[i + 1], population, dis);\n  }\n\n  return population;\n}\n\n// Helper functions\nfunction createRoulette(values = []) {\n  const fitnessValues = values.map(item => 1.0 / item);\n  const sum = fitnessValues.reduce((tempSum, el) => (tempSum += el));\n\n  let tempSum;\n  return fitnessValues\n    .map(item => item / sum)\n    .map(item => (tempSum = (tempSum || 0) + item));\n}\n\nfunction doCrossover(x, y, population, dis) {\n  let newPopulation = population.clone();\n\n  let child1 = getChild(\"next\", x, y, newPopulation, dis);\n  let child2 = getChild(\"previous\", x, y, newPopulation, dis);\n  newPopulation[x] = child1;\n  newPopulation[y] = child2;\n\n  return newPopulation;\n}\n\nfunction getChild(fun, x, y, population, dis) {\n  let solution = new Array();\n  let px = population[x].clone();\n  let py = population[y].clone();\n  let dx, dy;\n  let c = px[randomNumber(px.length)];\n  solution.push(c);\n  while (px.length > 1) {\n    dx = px[fun](px.indexOf(c));\n    dy = py[fun](py.indexOf(c));\n    px.deleteByValue(c);\n    py.deleteByValue(c);\n    c = dis[c][dx] < dis[c][dy] ? dx : dy;\n    solution.push(c);\n  }\n  return solution;\n}\n\nfunction wheelOut(roulette = []) {\n  const rand = Math.random();\n  roulette.forEach((item, i) => {\n    if (rand <= item) {\n      return i;\n    }\n  });\n  return 0;\n}\n","import { randomNumber } from \"../helpers/randomNumber\";\n\nexport function pushMutateMath(seq) {\n  var m, n;\n  do {\n    m = randomNumber(seq.length >> 1);\n    n = randomNumber(seq.length);\n  } while (m >= n);\n\n  var s1 = seq.slice(0, m);\n  var s2 = seq.slice(m, n);\n  var s3 = seq.slice(n, seq.length);\n  return s2\n    .concat(s1)\n    .concat(s3)\n    .clone();\n}\n\nexport function doMutateMath(seq) {\n  let m, n;\n    do {\n      m = randomNumber(seq.length - 2);\n      n = randomNumber(seq.length);\n    } while (m >= n);\n\n    for (var i = 0, j = (n - m + 1) >> 1; i < j; i++) {\n      seq.swap(m + i, n - i);\n    }\n    return seq;\n}\n\nexport function reverseMutateMath(seq) {\n  const reversed = seq.reverse();\n\n  return reversed;\n}\n\n// No use\n// export function preciseMutate(orseq, dis) {\n//   var seq = orseq.clone();\n//   if (Math.random() > 0.5) {\n//     seq.reverse();\n//   }\n//   var bestv = evaluate(seq, dis);\n//   for (var i = 0; i < seq.length >> 1; i++) {\n//     for (var j = i + 2; j < seq.length - 1; j++) {\n//       var new_seq = swap_seq(seq, i, i + 1, j, j + 1);\n//       var v = evaluate(new_seq, dis);\n//       if (v < bestv) {\n//         bestv = v;\n//         seq = new_seq;\n//       }\n//     }\n//   }\n//   return seq;\n// }\n// export function preciseMutate1(orseq, dis) {\n//   var seq = orseq.clone();\n//   var bestv = evaluate(seq, dis);\n\n//   for (var i = 0; i < seq.length - 1; i++) {\n//     var new_seq = seq.clone();\n//     new_seq.swap(i, i + 1);\n//     var v = evaluate(new_seq, dis);\n//     if (v < bestv) {\n//       bestv = v;\n//       seq = new_seq;\n//     }\n//   }\n//   return seq;\n// }\n// function swap_seq(seq, p0, p1, q0, q1) {\n//   var seq1 = seq.slice(0, p0);\n//   var seq2 = seq.slice(p1 + 1, q1);\n//   seq2.push(seq[p0]);\n//   seq2.push(seq[p1]);\n//   var seq3 = seq.slice(q1, seq.length);\n//   return seq1.concat(seq2).concat(seq3);\n// }","<script>\n  import StopWatch from \"../stopWatch/StopWatch.svelte\";\n\n  import { createEventDispatcher } from \"svelte\";\n  import { count } from \"./store.js\";\n  const dispatch = createEventDispatcher();\n\n  import { randomNumber } from \"../helpers/randomNumber\";\n  import { evaluate, randomIndivial, getCurrentBest } from \"./helper\";\n  import { selection, mutation, crossover } from \"./algorithm\";\n  import { POPULATION_SIZE, INTERVAL_DURATION } from \"./constants\";\n\n  export let graph;\n  export let stationsBetween;\n  export let dis;\n\n  $: text = \"\";\n\n  let running = false;\n  let mainInterval;\n\n  let iterators = {};\n  let bestValue;\n  let best = [];\n  let currentBest = {};\n  let population = [];\n  let values;\n\n  let count_value;\n\n  const unsubscribe = count.subscribe(value => {\n    count_value = value;\n  });\n\n  function onStartOrStop() {\n    if (running) {\n      clearInterval(mainInterval);\n      dispatch(\"getResult\", {\n        result: best\n      });\n      return (running = false);\n    }\n    initData();\n    GAInitialize();\n    mainInterval = setInterval(render, INTERVAL_DURATION);\n    return (running = true);\n  }\n\n  function initData() {\n    iterators = {\n      currentGeneration: 0\n    };\n    bestValue = undefined;\n    best = [];\n    currentBest = 0;\n    population = [];\n    values = new Array(POPULATION_SIZE);\n  }\n\n  function render() {\n    GANextGeneration();\n\n    text = `<p>\n      There are ${graph.nodes().length} stations in the map. \n      The ${iterators.currentGeneration}th generation \n      with ${count_value} times of mutation. \n      Best value: ${~~bestValue} -- ${currentBest.bestValue}. \n      Path: ${best.toString()}</p>`;\n  }\n\n  function GAInitialize() {\n    const stationsCount = graph.nodes().length;\n    population = Array.apply(null, Array(POPULATION_SIZE)).map(item =>\n      randomIndivial(stationsCount)\n    );\n    setBestValue();\n  }\n  function GANextGeneration() {\n    iterators.currentGeneration++;\n    population = selection(population, currentBest, best, values);\n    population = crossover(population, dis);\n    population = mutation(population);\n    setBestValue();\n  }\n\n  function setBestValue() {\n    values = population.map(item => evaluate(item, dis));\n    currentBest = getCurrentBest(values);\n\n    if (bestValue === undefined || bestValue > currentBest.bestValue) {\n      best = population[currentBest.bestPosition].clone();\n      bestValue = currentBest.bestValue;\n    }\n  }\n\n  function toggleStopWatch() {\n\n  }\n  function stopStopWatch() {\n\n  }\n</script>\n\n<style>\n.startButton {\n  border: 0;\n  padding: 8px 20px;\n  background: #ddd;\n  font-size: 14px;\n}\n.info {\n  display: flex;\n  background: #ddd;\n}\n  .table {\n    background: #eee;\n    max-width: 300px;\n  }\n  .stopWatch {\n    display: flex;\n    justify-content: center;\n  }\n  .row {\n    display: flex;\n  }\n  .value {\n    margin-left: auto;\n  }\n</style>\n\n<div class=\"calculateBlock\">\n  <button class=\"startButton\" on:click={onStartOrStop}>Start/Stop</button>\n\n  \n  <div class=\"info\">\n  <div class=\"table\">\n    <div class=\"stopWatch\">\n        <StopWatch {running}/>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Stations:</div>\n      <div class=\"value\">{graph.nodes().length}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Generation:</div>\n      <div class=\"value\">{iterators.currentGeneration}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Mutations:</div>\n      <div class=\"value\">{count_value}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Best value:</div>\n      <div class=\"value\">{bestValue}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"label\">Best in population:</div>\n      <div class=\"value\">{currentBest.bestValue}</div>\n    </div>\n  </div>\n  \n    <div class=\"paths\">\n      <div>\n        <div class=\"label-row\">Best path:</div>\n        <div class=\"value-row\">{best.toString()}</div>\n      </div>\n\n      <div>\n        <div class=\"label-row\">Best path in current population:</div>\n        <div class=\"value-row\">\n          <p>{ population[currentBest.bestPosition] && population[currentBest.bestPosition].toString() }</p>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"label-row\">Population:</div>\n        <div class=\"value-row\">\n          {#each population as item}\n            <p>{ item.toString()}</p>\n          {/each}\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  \n</div>\n","export function evaluate(indivial, dis) {\n  return indivial.reduce(\n    (sum, element, index, array) => (sum += dis[element][array[index - 1]])\n  );\n}\n\nexport function randomIndivial(length) {\n  return Array.from(Array(length).keys()).shuffle();\n}\n\nexport function getCurrentBest(values) {\n  const min = values.min();\n\n  return {\n    bestValue: min,\n    bestPosition: values.indexOf(min)\n  };\n}","<script>\n  import { onMount } from \"svelte\";\n\n  export let stationsBetween;\n  export let path;\n\n  import { quintOut } from 'svelte/easing';\n\timport { fade, draw, fly } from 'svelte/transition';\n\n  let showScheme = false;\n  let resultPath = [];\n  let stationsPath = [];\n  let stations;\n\n  $: showingStation = null;\n\n  onMount(async () => {\n    const res = await fetch(`https://metro.kh.ua/metroapi.php?value=stations`);\n    const data = await res.json();\n    stations = data;\n  });\n\n  function showStation(index) {\n    showingStation = index;\n  }\n\n  function onShow(){\n    showScheme = true;\n  }\n\n  function getResultPath({ path = [], stationsBetween }) {\n    let resultPath = [];\n\n    for (let i = 1; i < path.length; i++) {\n      const firstIndex = path[i - 1];\n      const secondIndex = path[i];\n      let stations = stationsBetween[firstIndex][secondIndex].slice(1);\n      resultPath = resultPath.concat(stations);\n    }\n    resultPath.unshift(path[0]);\n\n    return resultPath;\n  }\n\n  function calculatePath({ path = [], stationsBetween }) {\n    stationsPath = [];\n\n    if(path && path.length) {\n      resultPath = getResultPath({ path, stationsBetween });\n\n      resultPath.map(item => {\n        stationsPath.push(stations.find(station => station.id == item));\n      });\n    }\n  }\n\n  $: calculatePath({ path, stationsBetween });\n\n  const colors = {\n    red: \"#d22531\",\n    blue: \"#2060ba\",\n    green: \"#41a747\",\n    text: \"#09303b\",\n    textDisable: \"#9c98a6\"\n  };\n</script>\n\n<style>\n.container {\n  display: flex;\n}\naside {\n  background: #eee;\n}\n\n.lel {\n  opacity: 1 !important;\n  animation: none !important;\n}\n  .map {\n    display: block;\n    width: 500px;\n    margin: 50px auto;\n  }\n  .fadein {\n    opacity: 0.1;\n    animation: showing 1.25s linear forwards;\n  }\n  @keyframes showing {\n    0% { \n      opacity: 0.1;\n    }\n    30%, 60% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0.1;\n    }\n  }\n</style>\n\n<div>{resultPath}</div>\n\n<button on:click=\"{onShow}\">Show </button>\n\n\n{#if resultPath}\n\n<div class=\"container\">\n\n<aside>\n  {#each stationsPath as station, index}\n    {#if station}\n      <div on:mouseover=\"{() => showStation(index)}\">\n        {@html station.text}\n      </div>\n    {/if}\n  {/each}\n</aside>\n\n{#if showScheme}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    class=\"map\"\n    font-family=\"Tahoma\"\n    viewBox=\"0 0 1501 2151\">\n\n    <defs>\n      <symbol id=\"w\">\n        <path\n          fill=\"#fff\"\n          d=\"M6.6 11.5a4.9 4.9 0 110-9.8A4.8 4.8 0 019.7 3a9.7 9.7 0 004.5\n          2v3.5a9.7 9.7 0 00-3.9 1.6l-.9.6a4.8 4.8 0 01-2.8 1z\" />\n        <path\n          d=\"M6.7 3.5a3 3 0 012 .7 11.5 11.5 0 003.7 2V7a11.4 11.4 0 00-3.1\n          1.6l-.9.6a3 3 0 01-1.8.6 3.1 3.1 0 110-6.3m0-3.5A6.6 6.6 0 000 6.6a6.6\n          6.6 0 006.6 6.7 6.5 6.5 0 003.8-1.3l.9-.6a8 8 0 014.6-1.4V3.3a8 8 0\n          01-5-1.8A6.5 6.5 0 006.6 0z\" />\n      </symbol>\n    </defs>\n\n    <path\n      fill=\"none\"\n      stroke={colors.green}\n      stroke-width=\"3\"\n      d=\"M747 1310l-18-18-241 241a72 72 0 00-21 51v85h-15v21h56v-21h-16v-85a47\n      47 0 0114-34l46-45 12 12 15-15-12-12z\" />\n\n    <g font-size=\"34\">\n      <text fill={colors.red} transform=\"rotate(-90 1562.5 515.7)\">\n        Холодногірсько-заводська лінія\n      </text>\n      <text fill={colors.blue} transform=\"rotate(-90 700.6 -347.6)\">\n        Салтівська лінія\n      </text>\n      <text fill={colors.green} transform=\"rotate(-90 415.7 -32.8)\">\n        Олексіївська лінія\n      </text>\n    </g>\n    <g fill={colors.text} font-size=\"53\">\n\n      {#if resultPath.length}\n\n        {#each stationsPath as station, index}\n          {#if station}\n            <g class=\"fadein {showingStation === index ? 'lel' : ''}\" style=\"animation-delay: {index / 30 * 10}s\">\n              <g fill=\"none\" stroke-miterlimit=\"10\" stroke-width=\"28\">\n                <g stroke={colors[station.color]}>\n                  {@html station.path}\n                </g>\n              </g>\n\n              <g fill={colors[station.color]}>\n                {@html station.stop}\n              </g>\n\n              <text style={station.style}>\n                {@html station.text}\n              </text>\n            </g>\n          {/if}\n        {/each}\n\n      {/if}\n\n    </g>\n    <g fill={colors.textDisable} font-size=\"53\">\n      <text transform=\"translate(573 1556)\">Державiнська</text>\n      <text transform=\"translate(519 1690)\">Одеська</text>\n    </g>\n  </svg>\n  {/if}\n</div>\n{/if}","// A graph data structure with depth-first search and topological sort.\nmodule.exports = function Graph(serialized){\n\n  // The returned graph instance.\n  var graph = {\n    addNode: addNode,\n    removeNode: removeNode,\n    nodes: nodes,\n    adjacent: adjacent,\n    addEdge: addEdge,\n    removeEdge: removeEdge,\n    setEdgeWeight: setEdgeWeight,\n    getEdgeWeight: getEdgeWeight,\n    indegree: indegree,\n    outdegree: outdegree,\n    depthFirstSearch: depthFirstSearch,\n    lowestCommonAncestors: lowestCommonAncestors,\n    topologicalSort: topologicalSort,\n    shortestPath: shortestPath,\n    serialize: serialize,\n    deserialize: deserialize\n  };\n\n  // The adjacency list of the graph.\n  // Keys are node ids.\n  // Values are adjacent node id arrays.\n  var edges = {};\n\n  // The weights of edges.\n  // Keys are string encodings of edges.\n  // Values are weights (numbers).\n  var edgeWeights = {};\n\n  // If a serialized graph was passed into the constructor, deserialize it.\n  if(serialized){\n    deserialize(serialized);\n  }\n\n  // Adds a node to the graph.\n  // If node was already added, this function does nothing.\n  // If node was not already added, this function sets up an empty adjacency list.\n  function addNode(node){\n    edges[node] = adjacent(node);\n    return graph;\n  }\n\n  // Removes a node from the graph.\n  // Also removes incoming and outgoing edges.\n  function removeNode(node){\n\n    // Remove incoming edges.\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(function (v){\n        if(v === node){\n          removeEdge(u, v);\n        }\n      });\n    });\n\n    // Remove outgoing edges (and signal that the node no longer exists).\n    delete edges[node];\n\n    return graph;\n  }\n\n  // Gets the list of nodes that have been added to the graph.\n  function nodes(){\n    var nodeSet = {};\n    Object.keys(edges).forEach(function (u){\n      nodeSet[u] = true;\n      edges[u].forEach(function (v){\n        nodeSet[v] = true;\n      });\n    });\n    return Object.keys(nodeSet);\n  }\n\n  // Gets the adjacent node list for the given node.\n  // Returns an empty array for unknown nodes.\n  function adjacent(node){\n    return edges[node] || [];\n  }\n\n  // Computes a string encoding of an edge,\n  // for use as a key in an object.\n  function encodeEdge(u, v){\n    return u + \"|\" + v;\n  }\n\n  // Sets the weight of the given edge.\n  function setEdgeWeight(u, v, weight){\n    edgeWeights[encodeEdge(u, v)] = weight;\n    return graph;\n  }\n\n  // Gets the weight of the given edge.\n  // Returns 1 if no weight was previously set.\n  function getEdgeWeight(u, v){\n    var weight = edgeWeights[encodeEdge(u, v)];\n    return weight === undefined ? 1 : weight;\n  }\n\n  // Adds an edge from node u to node v.\n  // Implicitly adds the nodes if they were not already added.\n  function addEdge(u, v, weight){\n    addNode(u);\n    addNode(v);\n    adjacent(u).push(v);\n\n    if (weight !== undefined) {\n      setEdgeWeight(u, v, weight);\n    }\n\n    return graph;\n  }\n\n  // Removes the edge from node u to node v.\n  // Does not remove the nodes.\n  // Does nothing if the edge does not exist.\n  function removeEdge(u, v){\n    if(edges[u]){\n      edges[u] = adjacent(u).filter(function (_v){\n        return _v !== v;\n      });\n    }\n    return graph;\n  }\n\n  // Computes the indegree for the given node.\n  // Not very efficient, costs O(E) where E = number of edges.\n  function indegree(node){\n    var degree = 0;\n    function check(v){\n      if(v === node){\n        degree++;\n      }\n    }\n    Object.keys(edges).forEach(function (u){\n      edges[u].forEach(check);\n    });\n    return degree;\n  }\n\n  // Computes the outdegree for the given node.\n  function outdegree(node){\n    return node in edges ? edges[node].length : 0;\n  }\n\n  // Depth First Search algorithm, inspired by\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 604\n  // This variant includes an additional option\n  // `includeSourceNodes` to specify whether to include or\n  // exclude the source nodes from the result (true by default).\n  // If `sourceNodes` is not specified, all nodes in the graph\n  // are used as source nodes.\n  function depthFirstSearch(sourceNodes, includeSourceNodes){\n\n    if(!sourceNodes){\n      sourceNodes = nodes();\n    }\n\n    if(typeof includeSourceNodes !== \"boolean\"){\n      includeSourceNodes = true;\n    }\n\n    var visited = {};\n    var nodeList = [];\n\n    function DFSVisit(node){\n      if(!visited[node]){\n        visited[node] = true;\n        adjacent(node).forEach(DFSVisit);\n        nodeList.push(node);\n      }\n    }\n\n    if(includeSourceNodes){\n      sourceNodes.forEach(DFSVisit);\n    } else {\n      sourceNodes.forEach(function (node){\n        visited[node] = true;\n      });\n      sourceNodes.forEach(function (node){\n        adjacent(node).forEach(DFSVisit);\n      });\n    }\n\n    return nodeList;\n  }\n\n  // Least Common Ancestors\n  // Inspired by https://github.com/relaxedws/lca/blob/master/src/LowestCommonAncestor.php code\n  // but uses depth search instead of breadth. Also uses some optimizations\n  function lowestCommonAncestors(node1, node2){\n\n    var node1Ancestors = [];\n    var lcas = [];\n\n    function CA1Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        node1Ancestors.push(node);\n        if (node == node2) {\n          lcas.push(node);\n          return false; // found - shortcut\n        }\n        return adjacent(node).every(node => {\n          return CA1Visit(visited, node);\n        });\n      } else {\n        return true;\n      }\n    }\n\n    function CA2Visit(visited, node){\n      if(!visited[node]){\n        visited[node] = true;\n        if (node1Ancestors.indexOf(node) >= 0) {\n          lcas.push(node);\n        } else if (lcas.length == 0) {\n          adjacent(node).forEach(node => {\n            CA2Visit(visited, node);\n          });\n        }\n      }\n    }\n\n    if (CA1Visit({}, node1)) { // No shortcut worked\n      CA2Visit({}, node2);\n    }\n\n    return lcas;\n  }\n\n  // The topological sort algorithm yields a list of visited nodes\n  // such that for each visited edge (u, v), u comes before v in the list.\n  // Amazingly, this comes from just reversing the result from depth first search.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 613\n  function topologicalSort(sourceNodes, includeSourceNodes){\n    return depthFirstSearch(sourceNodes, includeSourceNodes).reverse();\n  }\n\n  // Dijkstra's Shortest Path Algorithm.\n  // Cormen et al. \"Introduction to Algorithms\" 3rd Ed. p. 658\n  // Variable and function names correspond to names in the book.\n  function shortestPath(source, destination){\n\n    // Upper bounds for shortest path weights from source.\n    var d = {};\n\n    // Predecessors.\n    var p = {};\n\n    // Poor man's priority queue, keyed on d.\n    var q = {};\n\n    function initializeSingleSource(){\n      nodes().forEach(function (node){\n        d[node] = Infinity;\n      });\n      if (d[source] !== Infinity) {\n        throw new Error(\"Source node is not in the graph\");\n      }\n      if (d[destination] !== Infinity) {\n        throw new Error(\"Destination node is not in the graph\");\n      }\n      d[source] = 0;\n    }\n\n    // Adds entries in q for all nodes.\n    function initializePriorityQueue(){\n      nodes().forEach(function (node){\n        q[node] = true;\n      });\n    }\n\n    // Returns true if q is empty.\n    function priorityQueueEmpty(){\n      return Object.keys(q).length === 0;\n    }\n\n    // Linear search to extract (find and remove) min from q.\n    function extractMin(){\n      var min = Infinity;\n      var minNode;\n      Object.keys(q).forEach(function(node){\n        if (d[node] < min) {\n          min = d[node];\n          minNode = node;\n        }\n      });\n      if (minNode === undefined) {\n        // If we reach here, there's a disconnected subgraph, and we're done.\n        q = {};\n        return null;\n      }\n      delete q[minNode];\n      return minNode;\n    }\n\n    function relax(u, v){\n      var w = getEdgeWeight(u, v);\n      if (d[v] > d[u] + w) {\n        d[v] = d[u] + w;\n        p[v] = u;\n      }\n    }\n\n    function dijkstra(){\n      initializeSingleSource();\n      initializePriorityQueue();\n      while(!priorityQueueEmpty()){\n        var u = extractMin();\n        adjacent(u).forEach(function (v){\n          relax(u, v);\n        });\n      }\n    }\n\n    // Assembles the shortest path by traversing the\n    // predecessor subgraph from destination to source.\n    function path(){\n      var nodeList = [];\n      var weight = 0;\n      var node = destination;\n      while(p[node]){\n        nodeList.push(node);\n        weight += getEdgeWeight(p[node], node);\n        node = p[node];\n      }\n      if (node !== source) {\n        throw new Error(\"No path found\");\n      }\n      nodeList.push(node);\n      nodeList.reverse();\n      nodeList.weight = weight;\n      return nodeList;\n    }\n\n    dijkstra();\n\n    return path();\n  }\n\n  // Serializes the graph.\n  function serialize(){\n    var serialized = {\n      nodes: nodes().map(function (id){\n        return { id: id };\n      }),\n      links: []\n    };\n\n    serialized.nodes.forEach(function (node){\n      var source = node.id;\n      adjacent(source).forEach(function (target){\n        serialized.links.push({\n          source: source,\n          target: target,\n          weight: getEdgeWeight(source, target)\n        });\n      });\n    });\n\n    return serialized;\n  }\n\n  // Deserializes the given serialized graph.\n  function deserialize(serialized){\n    serialized.nodes.forEach(function (node){ addNode(node.id); });\n    serialized.links.forEach(function (link){ addEdge(link.source, link.target, link.weight); });\n    return graph;\n  }\n\n  return graph;\n}\n","import Graph from \"graph-data-structure\";\n\nexport default function createGraph(data) {\n  const INTERVAL_TIME = 6;\n\n  function getWeight(weight) {\n    return weight + INTERVAL_TIME;\n  }\n\n  const graph = Graph();\n\n  data\n    .map(item => ({\n      ...item,\n      weight: getWeight(item.weight)\n    }))\n    .map(item => {\n      graph.addEdge(item.from, item.to, item.weight);\n      graph.addEdge(item.to, item.from, item.weight);\n    });\n\n  let stationsBetween = [];\n\n  graph.nodes().map((i, index) => {\n    stationsBetween.push([]);\n    \n    graph.nodes().map((j, insideIndex) => {\n      const path = graph.shortestPath(i, j);\n      const cleanPath = path.slice();\n      stationsBetween[index].push(cleanPath);\n    });\n  });\n\n  graph.nodes().map((i, index) => {\n    graph.nodes().map((j, insideIndex) => {\n      const path = graph.shortestPath(i, j);\n      graph.addEdge(i, j, path.weight);\n    });\n  });\n\n  const distances = countDistances(graph);\n\n  return { graph, stationsBetween, distances };\n}\n\nfunction countDistances(graph) {\n  const points = graph.nodes();\n  const length = points.length;\n\n  return Array.apply(null, Array(length)).map((item, index) =>\n    Array.apply(null, Array(length)).map(\n      (item, insideIndex) =>\n        ~~graph.getEdgeWeight(points[index], points[insideIndex])\n    )\n  );\n}\n","<script>\n  import PathCalculate from \"./pathCalculate/PathCalculate.svelte\";\n  import SchemeRender from \"./SchemeRender.svelte\";\n  import { onMount } from \"svelte\";\n\n  import createGraph from \"./graphBuilder\";\n\n  let graph;\n  let stationsBetween;\n  let dis;\n  let bestPath;\n\n  onMount(async () => {\n    const res = await fetch(`https://metro.kh.ua/metroapi.php?value=path`);\n    const data = await res.json();\n    const graphData = createGraph(data)\n    graph = graphData.graph;\n    stationsBetween = graphData.stationsBetween;\n    dis = graphData.distances;\n  });\n\n  function getResult(e) {\n    bestPath = e.detail.result;\n  }\n</script>\n\n<div class=\"lol\">\n  {#if graph && stationsBetween && dis}\n    <PathCalculate {graph} {stationsBetween} {dis} on:getResult={getResult}/>\n  {/if}\n\n  <SchemeRender path={bestPath} {stationsBetween}/>\n</div>\n","import { randomNumber } from \"./randomNumber\";\n\nexport default function initArrayPrototypes() {\n  Array.prototype.clone = function() {\n    return this.slice(0);\n  };\n  Array.prototype.max = function() {\n    return Math.max.apply(null, this);\n  };\n  Array.prototype.min = function() {\n    return Math.min.apply(null, this);\n  };\n  Array.prototype.shuffle = function() {\n    for (\n      var j, x, i = this.length - 1;\n      i;\n      j = randomNumber(i), x = this[--i], this[i] = this[j], this[j] = x\n    );\n    return this;\n  };\n  Array.prototype.indexOf = function(value) {\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === value) {\n        return i;\n      }\n    }\n  };\n  Array.prototype.deleteByValue = function(value) {\n    var pos = this.indexOf(value);\n    this.splice(pos, 1);\n  };\n  Array.prototype.next = function(index) {\n    if (index === this.length - 1) {\n      return this[0];\n    } else {\n      return this[index + 1];\n    }\n  };\n  Array.prototype.previous = function(index) {\n    if (index === 0) {\n      return this[this.length - 1];\n    } else {\n      return this[index - 1];\n    }\n  };\n  Array.prototype.swap = function(x, y) {\n    if (x > this.length || y > this.length || x === y) {\n      return;\n    }\n    var tem = this[x];\n    this[x] = this[y];\n    this[y] = tem;\n  };\n  Array.prototype.roll = function() {\n    var rand = randomNumber(this.length);\n    var tem = [];\n    for (var i = rand; i < this.length; i++) {\n      tem.push(this[i]);\n    }\n    for (var i = 0; i < rand; i++) {\n      tem.push(this[i]);\n    }\n    return tem;\n  };\n}","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","HtmlTag","[object Object]","html","this","e","u","n","t","innerHTML","Array","from","childNodes","m","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","mount_component","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","ret","hydrate","l","children","intro","SvelteComponent","$destroy","index","indexOf","splice","zeroPadded","number","toString","formatTime","milliseconds","Math","floor","lapse","rotation","seconds","minutes","transitioned","transition","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","time","beginningTime","Date","getTime","interval","setInterval","currentTime","clearInterval","unsubscribe","running","terminate","count","randomNumber","boundary","parseInt","random","POPULATION_SIZE","CROSSOVER_PROBABILITY","MUTATION_PROBABILITY","INTERVAL_DURATION","mutationIteration","array","reverseMutate","seq","reverse","reverseMutateMath","doMutate","j","swap","doMutateMath","pushMutate","s1","s2","s3","concat","clone","pushMutateMath","doCrossover","x","y","population","dis","newPopulation","child1","getChild","child2","fun","dx","dy","solution","px","py","deleteByValue","wheelOut","roulette","rand","item","graph","nodes","iterators","currentGeneration","currentBest","bestValue","best","bestPosition","count_value","onStartOrStop","dispatch","mainInterval","values","stationsBetween","render","parents","fitnessValues","sum","reduce","tempSum","el","createRoulette","selection","queue","shuffle","crossover","mutation","setBestValue","indivial","evaluate","min","getCurrentBest","undefined","result","stationsCount","apply","keys","randomIndivial","GAInitialize","stationsPath","showScheme","station","mouseover_handler","resultPath","colors","green","red","blue","textDisable","path","color","showingStation","onShow","stations","showStation","async","res","fetch","json","firstIndex","secondIndex","unshift","getResultPath","find","id","calculatePath","serialized","addNode","removeNode","edges","v","removeEdge","adjacent","addEdge","setEdgeWeight","getEdgeWeight","indegree","degree","check","outdegree","depthFirstSearch","lowestCommonAncestors","node1","node2","node1Ancestors","lcas","CA1Visit","visited","every","CA2Visit","topologicalSort","sourceNodes","includeSourceNodes","shortestPath","source","destination","q","extractMin","minNode","Infinity","relax","w","initializeSingleSource","dijkstra","nodeList","weight","serialize","links","deserialize","edgeWeights","nodeSet","encodeEdge","_v","DFSVisit","link","createGraph","INTERVAL_TIME","getWeight","Graph","to","insideIndex","cleanPath","distances","points","countDistances","getResult","bestPath","r","graphData","prototype","max","pos","next","previous","tem","roll","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EA6GhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAkBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOzB,EAAM0B,EAAOC,EAASC,GAElC,OADA5B,EAAK6B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM5B,EAAK8B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK/B,EAAMgC,EAAWC,GACd,MAATA,EACAjC,EAAKkC,gBAAgBF,GAErBhC,EAAKmC,aAAaH,EAAWC,GA+ErC,SAASG,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAepB,SAASgB,EAAUrC,EAAMsC,EAAKL,EAAOM,GACjCvC,EAAKwC,MAAMC,YAAYH,EAAKL,EAAOM,EAAY,YAAc,IA4DjE,MAAMG,EACFC,YAAYC,EAAMzC,EAAS,MACvB0C,KAAKC,EAAIhC,EAAQ,OACjB+B,KAAKjD,EAAIO,EACT0C,KAAKE,EAAEH,GAEXD,EAAE5C,EAAQI,EAAS,MACf,IAAK,IAAIQ,EAAI,EAAGA,EAAIkC,KAAKG,EAAEpC,OAAQD,GAAK,EACpCT,EAAOH,EAAQ8C,KAAKG,EAAErC,GAAIR,GAE9B0C,KAAKI,EAAIlD,EAEb4C,EAAEC,GACEC,KAAKC,EAAEI,UAAYN,EACnBC,KAAKG,EAAIG,MAAMC,KAAKP,KAAKC,EAAEO,YAE/BV,EAAEC,GACEC,KAAKhC,IACLgC,KAAKE,EAAEH,GACPC,KAAKS,EAAET,KAAKI,EAAGJ,KAAKjD,GAExB+C,IACIE,KAAKG,EAAExD,QAAQa,IAiIvB,IAAIkD,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAExB,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAKX,SAASK,EAAQ1E,GACbwE,IAAwBG,GAAGC,SAASC,KAAK7E,GAQ7C,SAAS8E,IACL,MAAMP,EAAYF,EAClB,MAAO,CAACU,EAAMC,KACV,MAAMC,EAAYV,EAAUI,GAAGM,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMzC,EAxLlB,SAAsBuC,EAAMC,GACxB,MAAMpB,EAAI9B,SAASoD,YAAY,eAE/B,OADAtB,EAAEuB,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BpB,EAqLewB,CAAaL,EAAMC,GACjCC,EAAUI,QAAQ/E,QAAQN,IACtBA,EAAGsF,KAAKf,EAAW/B,OAqBnC,MAAM+C,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB/F,GACzByF,EAAiBZ,KAAK7E,GAK1B,SAASgG,IACL,MAAMC,EAAiB,IAAIC,IAC3B,EAAG,CAGC,KAAOX,EAAiB7D,QAAQ,CAC5B,MAAM6C,EAAYgB,EAAiBY,QACnC7B,EAAsBC,GACtB6B,EAAO7B,EAAUI,IAErB,KAAOa,EAAkB9D,QACrB8D,EAAkBa,KAAlBb,GAIJ,IAAK,IAAI/D,EAAI,EAAGA,EAAIgE,EAAiB/D,OAAQD,GAAK,EAAG,CACjD,MAAM6E,EAAWb,EAAiBhE,GAC7BwE,EAAeM,IAAID,KACpBA,IAEAL,EAAeO,IAAIF,IAG3Bb,EAAiB/D,OAAS,QACrB6D,EAAiB7D,QAC1B,KAAOgE,EAAgBhE,QACnBgE,EAAgBW,KAAhBX,GAEJI,GAAmB,EAEvB,SAASM,EAAOzB,GACRA,EAAG8B,WACH9B,EAAGyB,OAAOzB,EAAG+B,OACbtG,EAAQuE,EAAGgC,eACXhC,EAAG8B,SAASG,EAAEjC,EAAG+B,MAAO/B,EAAGkC,KAC3BlC,EAAG+B,MAAQ,KACX/B,EAAGmC,aAAaxG,QAAQyF,IAiBhC,MAAMgB,EAAW,IAAIb,IACrB,IAAIc,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMzF,IACfsF,EAASK,OAAOF,GAChBA,EAAMzF,EAAE0F,IAGhB,SAASE,EAAeH,EAAOC,EAAOhG,EAAQmF,GAC1C,GAAIY,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAASR,IAAIW,GACb,OACJH,EAASP,IAAIU,GACbF,EAAOO,EAAE1C,KAAK,KACVkC,EAASK,OAAOF,GACZZ,IACInF,GACA+F,EAAMvF,EAAE,GACZ2E,OAGRY,EAAMI,EAAEH,IAkhBhB,SAASK,EAAgBjD,EAAW1D,EAAQI,GACxC,MAAMwF,SAAEA,EAAQ7B,SAAEA,EAAQ6C,WAAEA,EAAUX,aAAEA,GAAiBvC,EAAUI,GACnE8B,EAASrC,EAAEvD,EAAQI,GAEnB8E,EAAoB,KAChB,MAAM2B,EAAiB9C,EAAS+C,IAAI5H,GAAK6H,OAAOrH,GAC5CkH,EACAA,EAAW5C,QAAQ6C,GAKnBtH,EAAQsH,GAEZnD,EAAUI,GAAGC,SAAW,KAE5BkC,EAAaxG,QAAQyF,GAEzB,SAAS8B,EAAkBtD,EAAW/C,GAC9B+C,EAAUI,GAAG8B,WACbrG,EAAQmE,EAAUI,GAAG8C,YACrBlD,EAAUI,GAAG8B,SAAS9E,EAAEH,GAGxB+C,EAAUI,GAAG8C,WAAalD,EAAUI,GAAG8B,SAAW,KAClDlC,EAAUI,GAAGkC,IAAM,IAG3B,SAASiB,EAAWvD,EAAWnB,GACtBmB,EAAUI,GAAG+B,QACdnB,EAAiBV,KAAKN,GAtpBrBuB,IACDA,GAAmB,EACnBH,EAAiBoC,KAAK/B,IAspBtBzB,EAAUI,GAAG+B,MAAQzG,KAEzBsE,EAAUI,GAAG+B,MAAMtD,IAAO,EAE9B,SAAS4E,EAAKzD,EAAW7B,EAASuF,EAAUC,EAAiBC,EAAWC,GACpE,MAAMC,EAAmBhE,EACzBC,EAAsBC,GACtB,MAAM+D,EAAQ5F,EAAQ4F,OAAS,GACzB3D,EAAKJ,EAAUI,GAAK,CACtB8B,SAAU,KACVI,IAAK,KAELyB,MAAOF,EACPhC,OAAQtG,EACRqI,UAAAA,EACAI,MAAOtI,IAEP2E,SAAU,GACV6C,WAAY,GACZd,cAAe,GACfG,aAAc,GACd0B,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiB1D,GAAG6D,QAAU,IAElEvD,UAAWhF,IACXyG,MAAO,MAEX,IAAIgC,GAAQ,EACZ/D,EAAGkC,IAAMoB,EACHA,EAAS1D,EAAW+D,EAAO,CAAClF,EAAKuF,EAAK5F,EAAQ4F,KACxChE,EAAGkC,KAAOsB,EAAUxD,EAAGkC,IAAIzD,GAAMuB,EAAGkC,IAAIzD,GAAOL,KAC3C4B,EAAG4D,MAAMnF,IACTuB,EAAG4D,MAAMnF,GAAKL,GACd2F,GACAZ,EAAWvD,EAAWnB,IAEvBuF,IAETL,EACN3D,EAAGyB,SACHsC,GAAQ,EACRtI,EAAQuE,EAAGgC,eACXhC,EAAG8B,SAAWyB,EAAgBvD,EAAGkC,KAC7BnE,EAAQ7B,SACJ6B,EAAQkG,QAERjE,EAAG8B,SAASoC,EApgCxB,SAAkBjH,GACd,OAAOqC,MAAMC,KAAKtC,EAAQuC,YAmgCJ2E,CAASpG,EAAQ7B,SAI/B8D,EAAG8B,SAASc,IAEZ7E,EAAQqG,OACR9B,EAAc1C,EAAUI,GAAG8B,UAC/Be,EAAgBjD,EAAW7B,EAAQ7B,OAAQ6B,EAAQzB,QACnD+E,KAEJ1B,EAAsB+D,GAsC1B,MAAMW,EACFvF,WACIoE,EAAkBlE,KAAM,GACxBA,KAAKsF,SAAWnJ,EAEpB2D,IAAIsB,EAAMuB,GACN,MAAMrB,EAAatB,KAAKgB,GAAGM,UAAUF,KAAUpB,KAAKgB,GAAGM,UAAUF,GAAQ,IAEzE,OADAE,EAAUJ,KAAKyB,GACR,KACH,MAAM4C,EAAQjE,EAAUkE,QAAQ7C,IACjB,IAAX4C,GACAjE,EAAUmE,OAAOF,EAAO,IAGpCzF,SCv0CJ,SAAS4F,EAAWC,GAClB,OAAOA,GAAU,GAAKA,EAAOC,WAAa,IAAID,IAWzC,SAASE,EAAWC,GAIzB,MAAO,GAHIJ,EAAWK,KAAKC,MAAMF,EAAe,IAAO,QAC5CJ,EAAWK,KAAKC,MAAMF,EAAe,KAAQ,OACpCC,KAAKC,MAAMF,EAAe,IAVhCF,WAAWlE,OAAO,yDCyCrBmE,IAAWI,8oBAf4BC,0MAOgB,KAAXA,SAAiB,urBAPtBA,+DAOgB,KAAXA,SAAiB,6CAQ7DL,IAAWI,mGA7Cb,IAGHE,EACAC,EACAC,WALOJ,EAAQ,+IAEhBC,EAAaD,EAAQ,IAAO,GAAM,IAAO,uCAKpCA,GAASG,GAAWD,gBACxBC,EAAQzG,MAAM2G,WAAa,4CAC3BH,EAAQxG,MAAM2G,WAAa,iDAC3BD,GAAe,+BAEZJ,IAAUI,gBACbD,EAAQzG,MAAM2G,WAAa,sBAC3BH,EAAQxG,MAAM2G,WAAa,2BAC3BD,GAAe,8PCfvB,MAAME,EAAmB,GAgBzB,SAASC,EAASpH,EAAOqH,EAAQtK,GAC7B,IAAIuK,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAI/J,EAAesC,EAAOyH,KACtBzH,EAAQyH,EACJH,GAAM,CACN,MAAMI,GAAaP,EAAiBxI,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAI6I,EAAY5I,OAAQD,GAAK,EAAG,CAC5C,MAAMiJ,EAAIJ,EAAY7I,GACtBiJ,EAAE,KACFR,EAAiBrF,KAAK6F,EAAG3H,GAE7B,GAAI0H,EAAW,CACX,IAAK,IAAIhJ,EAAI,EAAGA,EAAIyI,EAAiBxI,OAAQD,GAAK,EAC9CyI,EAAiBzI,GAAG,GAAGyI,EAAiBzI,EAAI,IAEhDyI,EAAiBxI,OAAS,IA0B1C,MAAO,CAAE6I,IAAAA,EAAKnE,OArBd,SAAgBpG,GACZuK,EAAIvK,EAAG+C,KAoBW4H,UAlBtB,SAAmB5K,EAAK6K,EAAa9K,GACjC,MAAM+K,EAAa,CAAC9K,EAAK6K,GAMzB,OALAN,EAAYzF,KAAKgG,GACU,IAAvBP,EAAY5I,SACZ2I,EAAOD,EAAMG,IAAQzK,GAEzBC,EAAIgD,GACG,KACH,MAAMmG,EAAQoB,EAAYnB,QAAQ0B,IACnB,IAAX3B,GACAoB,EAAYlB,OAAOF,EAAO,GAEH,IAAvBoB,EAAY5I,SACZ2I,IACAA,EAAO,SCvDhB,MAAMS,EDOF,CACHH,UAAWR,ECRU,GAAG,SAAeI,GAC9C,MACMQ,GADY,IAAIC,MACUC,UAE1BC,EAAWC,YAAY,KAC5B,MACMC,GADU,IAAIJ,MACQC,UAC5BV,EAAIa,EAAcL,IAChB,IAEH,OAAO,WAGNR,EAAI,GACJc,cAAcH,ODN0BP,yDEoCzBf,iJAAAA,yHA1CR,IAGH0B,WAHOC,GAAU,KAEjB3B,EAAQ,EAoBZ,SAAS4B,IACHF,IACFA,oBACAA,EAAc,OL8fpB,IAAmBtL,SAAAA,EKnfP,KACRwL,KLmfAhH,IAAwBG,GAAG8C,WAAW5C,KAAK7E,+GKnhBtCuL,aAyBL3B,EAAQ,GACR4B,oBAlBAF,EAAcR,EAAKH,UAAU5H,cAC3B6G,EAAQ7G,OAKVyI,8GCtBG,MAAMC,GAAQtB,EAAS,GCFvB,SAASuB,GAAaC,GAC3B,OAAOC,SAASlC,KAAKmC,SAAWF,GCD3B,MAAMG,GAAkB,GAClBC,GAAwB,GACxBC,GAAuB,GACvBC,GAAoB,GCOjC,SAASC,GAAkBC,GAEzB,OADAV,GAAMrF,OAAOtC,GAAKA,EAAI,GACfqI,EAET,MAAMC,GAAgBC,GAAOH,GCiBtB,SAA2BG,GAGhC,OAFiBA,EAAIC,UDlBwBC,CAAkBF,IAC3DG,GAAWH,GAAOH,GCGjB,SAAsBG,GAC3B,IAAIjI,EAAGN,EACL,GACEM,EAAIsH,GAAaW,EAAI3K,OAAS,GAC9BoC,EAAI4H,GAAaW,EAAI3K,cACd0C,GAAKN,GAEd,IAAK,IAAIrC,EAAI,EAAGgL,EAAK3I,EAAIM,EAAI,GAAM,EAAG3C,EAAIgL,EAAGhL,IAC3C4K,EAAIK,KAAKtI,EAAI3C,EAAGqC,EAAIrC,GAEtB,OAAO4K,EDb+BM,CAAaN,IACjDO,GAAaP,GAAOH,GCdnB,SAAwBG,GAC7B,IAAIjI,EAAGN,EACP,GACEM,EAAIsH,GAAaW,EAAI3K,QAAU,GAC/BoC,EAAI4H,GAAaW,EAAI3K,cACd0C,GAAKN,GAEd,IAAI+I,EAAKR,EAAIhH,MAAM,EAAGjB,GAClB0I,EAAKT,EAAIhH,MAAMjB,EAAGN,GAClBiJ,EAAKV,EAAIhH,MAAMvB,EAAGuI,EAAI3K,QAC1B,OAAOoL,EACJE,OAAOH,GACPG,OAAOD,GACPE,QDCuCC,CAAeb,IAiE3D,SAASc,GAAYC,EAAGC,EAAGC,EAAYC,GACrC,IAAIC,EAAgBF,EAAWL,QAE3BQ,EAASC,GAAS,OAAQN,EAAGC,EAAGG,EAAeD,GAC/CI,EAASD,GAAS,WAAYN,EAAGC,EAAGG,EAAeD,GAIvD,OAHAC,EAAcJ,GAAKK,EACnBD,EAAcH,GAAKM,EAEZH,EAGT,SAASE,GAASE,EAAKR,EAAGC,EAAGC,EAAYC,GACvC,IAGIM,EAAIC,EAHJC,EAAW,IAAI9J,MACf+J,EAAKV,EAAWF,GAAGH,QACnBgB,EAAKX,EAAWD,GAAGJ,QAEnB1F,EAAIyG,EAAGtC,GAAasC,EAAGtM,SAE3B,IADAqM,EAASlJ,KAAK0C,GACPyG,EAAGtM,OAAS,GACjBmM,EAAKG,EAAGJ,GAAKI,EAAG7E,QAAQ5B,IACxBuG,EAAKG,EAAGL,GAAKK,EAAG9E,QAAQ5B,IACxByG,EAAGE,cAAc3G,GACjB0G,EAAGC,cAAc3G,GACjBA,EAAIgG,EAAIhG,GAAGsG,GAAMN,EAAIhG,GAAGuG,GAAMD,EAAKC,EACnCC,EAASlJ,KAAK0C,GAEhB,OAAOwG,EAGT,SAASI,GAASC,EAAW,IAC3B,MAAMC,EAAO3E,KAAKmC,SAMlB,OALAuC,EAAS9N,QAAQ,CAACgO,EAAM7M,KACtB,GAAI4M,GAAQC,EACV,OAAO7M,IAGJ,8FE6DQ6M,KAAK/E,gGAAL+E,KAAK/E,oMArCIgF,MAAMC,QAAQ9M,eAId+M,UAAUC,0BAYVC,YAAYC,kBAONC,KAAKtF,mBAMtB+D,aAAWqB,YAAYG,iBAAiBxB,aAAWqB,YAAYG,cAAcvF,yCAjCxEgC,oBAwCH+B,kCAAL5L,wYA5BcqN,4FAIAH,yZAwBdlN,g7BA9C4BsN,qdA8C5BtN,+EAxCQ6J,6CAIMgD,MAAMC,QAAQ9M,iDAId+M,UAAUC,yDAIVK,qCAIAH,0CAIAD,YAAYC,+CAONC,KAAKtF,uEAMtB+D,aAAWqB,YAAYG,iBAAiBxB,aAAWqB,YAAYG,cAAcvF,sDAO3E+D,oBAAL5L,sGAAAA,0BAAAA,UAAAA,oIA5KV,MAAMuN,EAAWnK,IAOV,IAOHoK,EAGAN,EAIAO,EAEAJ,SAhBOR,EAAKa,gBACLA,EAAe7B,IACfA,KAIPhC,GAAU,EAGVkD,EAAY,GAEZI,EAAO,GACPF,EAAc,GACdrB,EAAa,GAKG7B,GAAMd,UAAU5H,oBAClCgM,EAAchM,KA4BhB,SAASsM,kBAmBPZ,EAAUC,sCACVpB,EF5DG,SAAmBA,EAAYqB,EAAaE,EAAMM,GACvD,IAAI3B,EAAgBF,EAAWL,QAE3BqC,EAAU,IAAIrL,MAElBqL,EAAQzK,KAAK2I,EAAcmB,EAAYG,eACvCQ,EAAQzK,KAAK2H,GAASqC,EAAK5B,UAC3BqC,EAAQzK,KAAK+H,GAAWiC,EAAK5B,UAC7BqC,EAAQzK,KAAKuH,GAAcyC,EAAK5B,UAChCqC,EAAQzK,KAAKgK,EAAK5B,SAElB,MAAMmB,EAyCR,SAAwBe,EAAS,IAC/B,MAAMI,EAAgBJ,EAAOxH,IAAI2G,GAAQ,EAAMA,GACzCkB,EAAMD,EAAcE,OAAO,CAACC,EAASC,IAAQD,GAAWC,GAE9D,IAAID,EACJ,OAAOH,EACJ5H,IAAI2G,GAAQA,EAAOkB,GACnB7H,IAAI2G,GAASoB,GAAWA,GAAW,GAAKpB,GAhD1BsB,CAAeT,GAEhC,IAAK,IAAI1N,EATK,EASQA,EAAIqK,GAAiBrK,IACzC6N,EAAQzK,KAAK2I,EAAcW,GAASC,KAItC,OAFAZ,EAAgB8B,EE4CDO,CAAUvC,EAAYqB,EAAaE,EAAMM,mBACtD7B,EFzBG,SAAmBA,EAAYC,GACpC,IAAIuC,EAAQ,IAAI7L,MAChB,IAAK,IAAIxC,EAAI,EAAGA,EAAIqK,GAAiBrK,IAC/BiI,KAAKmC,SAAWE,IAClB+D,EAAMjL,KAAKpD,GAGfqO,EAAMC,UACN,IAAK,IAAItO,EAAI,EAAGgL,EAAIqD,EAAMpO,OAAS,EAAGD,EAAIgL,EAAGhL,GAAK,EAChD6L,EAAaH,GAAY2C,EAAMrO,GAAIqO,EAAMrO,EAAI,GAAI6L,EAAYC,GAG/D,OAAOD,EEaQ0C,CAAU1C,EAAYC,mBACnCD,EFzCG,SAAkBA,GACvB,IAAIE,EAAgBF,EAAWL,QAC/B,IAAK,IAAIxL,EAAI,EAAGA,EAAIqK,GAAiBrK,IAC/BiI,KAAKmC,SAAWG,KACdtC,KAAKmC,SAAW,GAClB2B,EAAc/L,GAAK+K,GAASc,EAAW7L,IAEvC+L,EAAc/L,GAAKmL,GAAWU,EAAW7L,IAE3CA,KAGJ,OAAO+L,EE6BQyC,CAAS3C,IACtB4C,IApBAhO,EAAO,wBACOqM,EAAMC,QAAQ9M,2CACpB+M,EAAUC,+CACTK,8CACSH,QAAgBD,EAAYC,4BACpCC,EAAKtF,iBAkBjB,SAAS2G,IACPf,EAAS7B,EAAW3F,IAAI2G,ICtFrB,SAAkB6B,EAAU5C,GACjC,OAAO4C,EAASV,OACd,CAACD,EAAK5N,EAASsH,EAAOiD,IAAWqD,GAAOjC,EAAI3L,GAASuK,EAAMjD,EAAQ,MDoFnCkH,CAAS9B,EAAMf,oBAC/CoB,EC7EG,SAAwBQ,GAC7B,MAAMkB,EAAMlB,EAAOkB,MAEnB,MAAO,CACLzB,UAAWyB,EACXvB,aAAcK,EAAOhG,QAAQkH,IDwEfC,CAAenB,UAEXoB,IAAd3B,GAA2BA,EAAYD,EAAYC,sBACrDC,EAAOvB,EAAWqB,EAAYG,cAAc7B,uBAC5C2B,EAAYD,EAAYC,mKA3EzB1M,EAAO,oIAkBV,WACE,OAAIqJ,GACFF,cAAc6D,GACdD,EAAS,YAAa,CACpBuB,OAAQ3B,gBAEFtD,GAAU,mBASpBkD,EAAY,CACVC,kBAAmB,kBAErBE,OAAY2B,YACZ1B,EAAO,oBACPF,EAAc,kBACdrB,EAAa,IACb6B,EAAS,IAAIlL,MAAM6H,IAcrB,WACE,MAAM2E,EAAgBlC,EAAMC,QAAQ9M,sBACpC4L,EAAarJ,MAAMyM,MAAM,KAAMzM,MAAM6H,KAAkBnE,IAAI2G,IClExD,SAAwB5M,GAC7B,OAAOuC,MAAMC,KAAKD,MAAMvC,GAAQiP,QAAQZ,WDkEpCa,CAAeH,KAEjBP,IAhCAW,GACA3B,EAAe/D,YAAYkE,EAAQpD,gBAC3BV,GAAU,kSEkEbuF,kCAALpP,uCASW,qEATXA,kJAAAA,0FAAKoP,qBAALpP,8FAAAA,wBAAAA,SAAAA,SASCqP,oIANUC,QAAQ9O,8GADG+O,uEACXD,QAAQ9O,8DAFP,gFAAP8O,iKAkDEE,WAAiB,mzBAlBdC,OAAOC,0KAMHD,OAAOE,8DAGPF,OAAOG,+DAGPH,OAAOC,qFAIZD,OAAOjP,uHA2BPiP,OAAOI,oYAzBTL,WAAWxP,uHAEPoP,kCAALpP,0DAAAA,mDAAAA,sGAAKoP,qBAALpP,sGAAAA,wBAAAA,SAAAA,wEAKesP,QAAQQ,YAKVR,QAAQ3G,YAIR2G,QAAQ9O,oFAVJiP,SAAOH,QAAQS,iGAKnBN,SAAOH,QAAQS,wBAIXT,QAAQ1N,kCAXLoO,mBAAmBxI,MAAQ,MAAQ,+CAA8BA,MAAQ,GAAK,gIAGnF8H,QAAQQ,mDADNL,SAAOH,QAAQS,kDAMnBT,QAAQ3G,mDADR8G,SAAOH,QAAQS,gDAKfT,QAAQ9O,mDADJ8O,QAAQ1N,6DAXLoO,mBAAmBxI,MAAQ,MAAQ,gFAD3C,gFAAP8H,yIA3DA,8CALTE,0FAEaS,4GAFbT,cAKDA,+JAvGI,IASHU,mBATOxC,EAAeoC,KACfA,KAKPT,GAAa,EACbG,EAAa,GACbJ,EAAe,GAWnB,SAASe,EAAY3I,sBACnBwI,EAAiBxI,GAPnBxE,EAAQoN,UACN,MAAMC,QAAYC,MAAM,mDAClB7P,QAAa4P,EAAIE,OACvBL,EAAWzP,sMAyBb,UAAuBqP,KAAEA,EAAO,GAAEpC,gBAAEA,qBAClC0B,EAAe,IAEZU,GAAQA,EAAK9P,wBACdwP,EAlBJ,UAAuBM,KAAEA,EAAO,GAAEpC,gBAAEA,IAClC,IAAI8B,EAAa,GAEjB,IAAK,IAAIzP,EAAI,EAAGA,EAAI+P,EAAK9P,OAAQD,IAAK,CACpC,MAAMyQ,EAAaV,EAAK/P,EAAI,GACtB0Q,EAAcX,EAAK/P,GACzB,IAAImQ,EAAWxC,EAAgB8C,GAAYC,GAAa9M,MAAM,GAC9D6L,EAAaA,EAAWlE,OAAO4E,GAIjC,OAFAV,EAAWkB,QAAQZ,EAAK,IAEjBN,EAOQmB,CAAc,CAAEb,KAAAA,EAAMpC,gBAAAA,KAEnC8B,EAAWvJ,IAAI2G,IACbwC,EAAajM,KAAK+M,EAASU,KAAKtB,GAAWA,EAAQuB,IAAMjE,OAK5DkE,CAAc,CAAEhB,KAAAA,EAAMpC,gBAAAA,wBA1CtBsC,EAAiB,8FAYpB,0BACEX,GAAa,WA+BA,CACbM,IAAK,UACLC,KAAM,UACNF,MAAO,UACPlP,KAAM,UACNqP,YAAa,yJC9DjB,OAAiB,SAAekB,GAG9B,IAAIlE,EAAQ,CACVmE,QAASA,EACTC,WA0CF,SAAoB7R,GAclB,OAXAZ,OAAOyQ,KAAKiC,GAAOtS,SAAQ,SAAUuD,GACnC+O,EAAM/O,GAAGvD,SAAQ,SAAUuS,GACtBA,IAAM/R,GACPgS,EAAWjP,EAAGgP,gBAMbD,EAAM9R,GAENyN,GAvDPC,MAAOA,EACPuE,SAAUA,EACVC,QAASA,EACTF,WAAYA,EACZG,cAAeA,EACfC,cAAeA,EACfC,SAqHF,SAAkBrS,GAChB,IAAIsS,EAAS,EACb,SAASC,EAAMR,GACVA,IAAM/R,GACPsS,IAMJ,OAHAlT,OAAOyQ,KAAKiC,GAAOtS,SAAQ,SAAUuD,GACnC+O,EAAM/O,GAAGvD,QAAQ+S,MAEZD,GA9HPE,UAkIF,SAAmBxS,GACjB,OAAOA,KAAQ8R,EAAQA,EAAM9R,GAAMY,OAAS,GAlI5C6R,iBAAkBA,EAClBC,sBAiLF,SAA+BC,EAAOC,GAEpC,IAAIC,EAAiB,GACjBC,EAAO,IAEX,SAASC,EAASC,EAAShT,GACzB,QAAIgT,EAAQhT,KACVgT,EAAQhT,IAAQ,EAChB6S,EAAe9O,KAAK/D,GAChBA,GAAQ4S,GACVE,EAAK/O,KAAK/D,IACH,GAEFiS,EAASjS,GAAMiT,MAAMjT,GACnB+S,EAASC,EAAShT,MAoB3B+S,CAAS,GAAIJ,IAbjB,SAASO,EAASF,EAAShT,GACrBgT,EAAQhT,KACVgT,EAAQhT,IAAQ,EACZ6S,EAAexK,QAAQrI,IAAS,EAClC8S,EAAK/O,KAAK/D,GACc,GAAf8S,EAAKlS,QACdqR,EAASjS,GAAMR,QAAQQ,IACrBkT,EAASF,EAAShT,MAOxBkT,CAAS,GAAIN,GAGf,OAAOE,GAtNPK,gBA6NF,SAAyBC,EAAaC,GACpC,OAAOZ,EAAiBW,EAAaC,GAAoB7H,WA7NzD8H,aAmOF,SAAsBC,EAAQC,GAG5B,IAAI3S,EAAI,GAGJiF,EAAI,GAGJ2N,EAAI,GA4BR,SAASC,IACP,IACIC,EADApE,EAAMqE,EAAAA,EAQV,OANAxU,OAAOyQ,KAAK4D,GAAGjU,SAAQ,SAASQ,GAC1Ba,EAAEb,GAAQuP,IACZA,EAAM1O,EAAEb,GACR2T,EAAU3T,WAGEyP,IAAZkE,GAEFF,EAAI,GACG,cAEFA,EAAEE,GACFA,GAGT,SAASE,EAAM9Q,EAAGgP,GAChB,IAAI+B,EAAI1B,EAAcrP,EAAGgP,GACrBlR,EAAEkR,GAAKlR,EAAEkC,GAAK+Q,IAChBjT,EAAEkR,GAAKlR,EAAEkC,GAAK+Q,EACdhO,EAAEiM,GAAKhP,GAqCX,OAjCA,YApDA,WAIE,GAHA2K,IAAQlO,SAAQ,SAAUQ,GACxBa,EAAEb,GAAQ4T,EAAAA,KAER/S,EAAE0S,KAAYK,EAAAA,EAChB,MAAM,IAAIjQ,MAAM,mCAElB,GAAI9C,EAAE2S,KAAiBI,EAAAA,EACrB,MAAM,IAAIjQ,MAAM,wCAElB9C,EAAE0S,GAAU,GA2CZQ,GAtCArG,IAAQlO,SAAQ,SAAUQ,GACxByT,EAAEzT,IAAQ,KAuCZ,KAjCiC,IAA1BZ,OAAOyQ,KAAK4D,GAAG7S,QAiCM,CAC1B,IAAImC,EAAI2Q,IACRzB,EAASlP,GAAGvD,SAAQ,SAAUuS,GAC5B8B,EAAM9Q,EAAGgP,OAyBfiC,GAlBA,WACE,IAAIC,EAAW,GACXC,EAAS,EACTlU,EAAOwT,EACX,KAAM1N,EAAE9F,IACNiU,EAASlQ,KAAK/D,GACdkU,GAAU9B,EAActM,EAAE9F,GAAOA,GACjCA,EAAO8F,EAAE9F,GAEX,GAAIA,IAASuT,EACX,MAAM,IAAI5P,MAAM,iBAKlB,OAHAsQ,EAASlQ,KAAK/D,GACdiU,EAASzI,UACTyI,EAASC,OAASA,EACXD,EAKFvD,IAlUPyD,UAsUF,WACE,IAAIxC,EAAa,CACfjE,MAAOA,IAAQ7G,KAAI,SAAU4K,GAC3B,MAAO,CAAEA,GAAIA,MAEf2C,MAAO,IAcT,OAXAzC,EAAWjE,MAAMlO,SAAQ,SAAUQ,GACjC,IAAIuT,EAASvT,EAAKyR,GAClBQ,EAASsB,GAAQ/T,SAAQ,SAAUO,GACjC4R,EAAWyC,MAAMrQ,KAAK,CACpBwP,OAAQA,EACRxT,OAAQA,EACRmU,OAAQ9B,EAAcmB,EAAQxT,WAK7B4R,GAxVP0C,YAAaA,GAMXvC,EAAQ,GAKRwC,EAAc,GAUlB,SAAS1C,EAAQ5R,GAEf,OADA8R,EAAM9R,GAAQiS,EAASjS,GAChByN,EAuBT,SAASC,IACP,IAAI6G,EAAU,GAOd,OANAnV,OAAOyQ,KAAKiC,GAAOtS,SAAQ,SAAUuD,GACnCwR,EAAQxR,IAAK,EACb+O,EAAM/O,GAAGvD,SAAQ,SAAUuS,GACzBwC,EAAQxC,IAAK,QAGV3S,OAAOyQ,KAAK0E,GAKrB,SAAStC,EAASjS,GAChB,OAAO8R,EAAM9R,IAAS,GAKxB,SAASwU,EAAWzR,EAAGgP,GACrB,OAAOhP,EAAI,IAAMgP,EAInB,SAASI,EAAcpP,EAAGgP,EAAGmC,GAE3B,OADAI,EAAYE,EAAWzR,EAAGgP,IAAMmC,EACzBzG,EAKT,SAAS2E,EAAcrP,EAAGgP,GACxB,IAAImC,EAASI,EAAYE,EAAWzR,EAAGgP,IACvC,YAAkBtC,IAAXyE,EAAuB,EAAIA,EAKpC,SAAShC,EAAQnP,EAAGgP,EAAGmC,GASrB,OARAtC,EAAQ7O,GACR6O,EAAQG,GACRE,EAASlP,GAAGgB,KAAKgO,QAEFtC,IAAXyE,GACF/B,EAAcpP,EAAGgP,EAAGmC,GAGfzG,EAMT,SAASuE,EAAWjP,EAAGgP,GAMrB,OALGD,EAAM/O,KACP+O,EAAM/O,GAAKkP,EAASlP,GAAG+D,QAAO,SAAU2N,GACtC,OAAOA,IAAO1C,MAGXtE,EA8BT,SAASgF,EAAiBW,EAAaC,GAEjCD,IACFA,EAAc1F,KAGiB,kBAAvB2F,IACRA,GAAqB,GAGvB,IAAIL,EAAU,GACViB,EAAW,GAEf,SAASS,EAAS1U,GACZgT,EAAQhT,KACVgT,EAAQhT,IAAQ,EAChBiS,EAASjS,GAAMR,QAAQkV,GACvBT,EAASlQ,KAAK/D,IAelB,OAXGqT,EACDD,EAAY5T,QAAQkV,IAEpBtB,EAAY5T,SAAQ,SAAUQ,GAC5BgT,EAAQhT,IAAQ,KAElBoT,EAAY5T,SAAQ,SAAUQ,GAC5BiS,EAASjS,GAAMR,QAAQkV,OAIpBT,EAqLT,SAASI,EAAY1C,GAGnB,OAFAA,EAAWjE,MAAMlO,SAAQ,SAAUQ,GAAO4R,EAAQ5R,EAAKyR,OACvDE,EAAWyC,MAAM5U,SAAQ,SAAUmV,GAAOzC,EAAQyC,EAAKpB,OAAQoB,EAAK5U,OAAQ4U,EAAKT,WAC1EzG,EAGT,OApVGkE,GACD0C,EAAY1C,GAmVPlE,ICpXM,SAASmH,GAAYvT,GAClC,MAAMwT,EAAgB,EAEtB,SAASC,EAAUZ,GACjB,OAAOA,EAASW,EAGlB,MAAMpH,EAAQsH,KAEd1T,EACGwF,IAAI2G,QACAA,EACH0G,OAAQY,EAAUtH,EAAK0G,WAExBrN,IAAI2G,IACHC,EAAMyE,QAAQ1E,EAAKpK,KAAMoK,EAAKwH,GAAIxH,EAAK0G,QACvCzG,EAAMyE,QAAQ1E,EAAKwH,GAAIxH,EAAKpK,KAAMoK,EAAK0G,UAG3C,IAAI5F,EAAkB,GAEtBb,EAAMC,QAAQ7G,IAAI,CAAClG,EAAGyH,KACpBkG,EAAgBvK,KAAK,IAErB0J,EAAMC,QAAQ7G,IAAI,CAAC8E,EAAGsJ,KACpB,MACMC,EADOzH,EAAM6F,aAAa3S,EAAGgL,GACZpH,QACvB+J,EAAgBlG,GAAOrE,KAAKmR,OAIhCzH,EAAMC,QAAQ7G,IAAI,CAAClG,EAAGyH,KACpBqF,EAAMC,QAAQ7G,IAAI,CAAC8E,EAAGsJ,KACpB,MAAMvE,EAAOjD,EAAM6F,aAAa3S,EAAGgL,GACnC8B,EAAMyE,QAAQvR,EAAGgL,EAAG+E,EAAKwD,YAI7B,MAAMiB,EAKR,SAAwB1H,GACtB,MAAM2H,EAAS3H,EAAMC,QACf9M,EAASwU,EAAOxU,OAEtB,OAAOuC,MAAMyM,MAAM,KAAMzM,MAAMvC,IAASiG,IAAI,CAAC2G,EAAMpF,IACjDjF,MAAMyM,MAAM,KAAMzM,MAAMvC,IAASiG,IAC/B,CAAC2G,EAAMyH,MACHxH,EAAM2E,cAAcgD,EAAOhN,GAAQgN,EAAOH,MAZhCI,CAAe5H,GAEjC,MAAO,CAAEA,MAAAA,EAAOa,gBAAAA,EAAiB6G,UAAAA,iDCdf1H,wBAAQa,sBAAkB7B,kCAAmB6I,6FAA7C7H,+CAAQa,iCAAkB7B,4HADvCgB,SAASa,mBAAmB7B,mCAIb8I,2BAAWjH,+JAJ1Bb,SAASa,mBAAmB7B,4DhBinB/BvG,EAAS,CACLsP,EAAG,EACH/O,EAAG,GACHX,EAAGI,yBAIFA,EAAOsP,GACRlW,EAAQ4G,EAAOO,GAEnBP,EAASA,EAAOJ,kCgBvnBEyP,kDAAWjH,uJAxB/B,IAAIb,EACAa,EACA7B,EACA8I,SAEJ3R,EAAQoN,UACN,MAAMC,QAAYC,MAAM,+CAElBuE,EAAYb,SADC3D,EAAIE,kBAEvB1D,EAAQgI,EAAUhI,2BAClBa,EAAkBmH,EAAUnH,yBAC5B7B,EAAMgJ,EAAUN,mEAGlB,SAAmBrS,gBACjByS,EAAWzS,EAAEoB,OAAOwL,yQCnBtBvM,MAAMuS,UAAUvJ,MAAQ,WACtB,OAAOtJ,KAAK0B,MAAM,IAEpBpB,MAAMuS,UAAUC,IAAM,WACpB,OAAO/M,KAAK+M,IAAI/F,MAAM,KAAM/M,OAE9BM,MAAMuS,UAAUnG,IAAM,WACpB,OAAO3G,KAAK2G,IAAIK,MAAM,KAAM/M,OAE9BM,MAAMuS,UAAUzG,QAAU,WACxB,IACE,IAAItD,EAAGW,EAAG3L,EAAIkC,KAAKjC,OAAS,EAC5BD,EACAgL,EAAIf,GAAajK,GAAI2L,EAAIzJ,OAAOlC,GAAIkC,KAAKlC,GAAKkC,KAAK8I,GAAI9I,KAAK8I,GAAKW,GAEnE,OAAOzJ,MAETM,MAAMuS,UAAUrN,QAAU,SAASpG,GACjC,IAAK,IAAItB,EAAI,EAAGA,EAAIkC,KAAKjC,OAAQD,IAC/B,GAAIkC,KAAKlC,KAAOsB,EACd,OAAOtB,GAIbwC,MAAMuS,UAAUtI,cAAgB,SAASnL,GACvC,IAAI2T,EAAM/S,KAAKwF,QAAQpG,GACvBY,KAAKyF,OAAOsN,EAAK,IAEnBzS,MAAMuS,UAAUG,KAAO,SAASzN,GAC9B,OAAIA,IAAUvF,KAAKjC,OAAS,EACnBiC,KAAK,GAELA,KAAKuF,EAAQ,IAGxBjF,MAAMuS,UAAUI,SAAW,SAAS1N,GAClC,OAAc,IAAVA,EACKvF,KAAKA,KAAKjC,OAAS,GAEnBiC,KAAKuF,EAAQ,IAGxBjF,MAAMuS,UAAU9J,KAAO,SAASU,EAAGC,GACjC,KAAID,EAAIzJ,KAAKjC,QAAU2L,EAAI1J,KAAKjC,QAAU0L,IAAMC,GAAhD,CAGA,IAAIwJ,EAAMlT,KAAKyJ,GACfzJ,KAAKyJ,GAAKzJ,KAAK0J,GACf1J,KAAK0J,GAAKwJ,IAEZ5S,MAAMuS,UAAUM,KAAO,WAGrB,IAFA,IAAIzI,EAAO3C,GAAa/H,KAAKjC,QACzBmV,EAAM,GACDpV,EAAI4M,EAAM5M,EAAIkC,KAAKjC,OAAQD,IAClCoV,EAAIhS,KAAKlB,KAAKlC,IAEhB,IAASA,EAAI,EAAGA,EAAI4M,EAAM5M,IACxBoV,EAAIhS,KAAKlB,KAAKlC,IAEhB,OAAOoV,aC5DC,kEAAQ,CACnBhW,OAAQiB,SAASiV"}